# Defines an EKS cluster importer
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: ximports.crossplane.giantswarm.io
spec:
  connectionSecretKeys:
  - kubeconfig
  group: crossplane.giantswarm.io
  names:
    kind: CompositeImport
    plural: ximports
    shortNames:
      - xi
      - ximport
  claimNames:
    kind: ImportClaim
    plural: importclaims
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              kubernetesAdditionalLabels:
                description: A set of labels to apply to all objects created by the
                  kubernetes provider
                type: object
                additionalProperties: true
              cloudProviderConfigRef:
                description: The name of the provider config given to the provisioners
                  for the current cloud provider
                type: string
              clusterProviderConfigRef:
                description: The name of the provider config to use for kubernetes
                type: string
              deletionPolicy:
                description: |-
                  Set the deletion policy type for resources By default this is set to Delete if not specified. In this instance, all objects created will be deleted if the parent XR is deleted.
                  To ensure all created resources are left behind when the XR is deleted, set this to Orphan
                  This does not affect objects created by the Kubernetes provider. For those, set the `kubeObjectDeletionPolicy` property.
                type: string
                default: Delete
                enum:
                - Delete
                - Orphan
              objectDeletionPolicy:
                description: |-
                  Set the reclaim policy type for resources. This is independant of `deletionPolicy` to allow objects created by the kubernetes provider to be left behind as part of a cluster adoption strategy.
                  If this is set to Delete then all resources created by the kubernetes provider will be deleted.
                  Default is Delete.
                type: string
                default: Delete
                enum:
                - Delete
                - Orphan
              clusterName:
                description: The ID of the EKS cluster to be imported
                type: string
              regionOrLocation:
                description: The region the cluster is located in
                type: string
              resourceGroupName:
                description: |-
                  This field is required when the composition is for Azure.
                  Specifies the resource group name in which the cluster may be discovered.
                type: string
            required:
            - kubernetesAdditionalLabels
            - clusterName
            - regionOrLocation
            - cloudProviderConfigRef
            - clusterProviderConfigRef
          status:
            type: object
            properties:
              azure:
                description: Contains the details for azure objects required to be
                  mapped to capz
                type: object
                properties:
                  cluster:
                    description: Details of the Azure cluster patched from `atProvider`
                    type: object
                    properties:
                      aciConnectorLinux:
                        description: A aci_connector_linux block as defined below.
                          For more details, please visit Create and configure an AKS
                          cluster to use virtual nodes.
                        items:
                          properties:
                            connectorIdentity:
                              description: A connector_identity block is exported.
                                The exported attributes are defined below.
                              items:
                                properties:
                                  clientId:
                                    description: The Client ID of the user-defined
                                      Managed Identity used by the ACI Connector.
                                    type: string
                                  objectId:
                                    description: The Object ID of the user-defined
                                      Managed Identity used by the ACI Connector.
                                    type: string
                                  userAssignedIdentityId:
                                    description: The ID of the User Assigned Identity
                                      used by the ACI Connector.
                                    type: string
                                type: object
                              type: array
                            subnetName:
                              description: The subnet name for the virtual nodes to
                                run.
                              type: string
                          type: object
                        type: array
                      apiServerAccessProfile:
                        description: An api_server_access_profile block as defined
                          below.
                        items:
                          properties:
                            authorizedIpRanges:
                              description: Set of authorized IP ranges to allow access
                                to API server, e.g. ["198.51.100.0/24"].
                              items:
                                type: string
                              type: array
                            subnetId:
                              description: The ID of the Subnet where the API server
                                endpoint is delegated to.
                              type: string
                            vnetIntegrationEnabled:
                              description: Should API Server VNet Integration be enabled?
                                For more details please visit Use API Server VNet
                                Integration.
                              type: boolean
                          type: object
                        type: array
                      apiServerAuthorizedIpRanges:
                        description: Deprecated in favor of `spec.forProvider.apiServerAccessProfile[0].authorizedIpRanges`
                        items:
                          type: string
                        type: array
                      autoScalerProfile:
                        description: A auto_scaler_profile block as defined below.
                        items:
                          properties:
                            balanceSimilarNodeGroups:
                              description: Detect similar node groups and balance
                                the number of nodes between them. Defaults to false.
                              type: boolean
                            emptyBulkDeleteMax:
                              description: Maximum number of empty nodes that can
                                be deleted at the same time. Defaults to 10.
                              type: string
                            expander:
                              description: Expander to use. Possible values are least-waste,
                                priority, most-pods and random. Defaults to random.
                              type: string
                            maxGracefulTerminationSec:
                              description: Maximum number of seconds the cluster autoscaler
                                waits for pod termination when trying to scale down
                                a node. Defaults to 600.
                              type: string
                            maxNodeProvisioningTime:
                              description: Maximum time the autoscaler waits for a
                                node to be provisioned. Defaults to 15m.
                              type: string
                            maxUnreadyNodes:
                              description: Maximum Number of allowed unready nodes.
                                Defaults to 3.
                              type: number
                            maxUnreadyPercentage:
                              description: Maximum percentage of unready nodes the
                                cluster autoscaler will stop if the percentage is
                                exceeded. Defaults to 45.
                              type: number
                            newPodScaleUpDelay:
                              description: For scenarios like burst/batch scale where
                                you don't want CA to act before the kubernetes scheduler
                                could schedule all the pods, you can tell CA to ignore
                                unscheduled pods before they're a certain age. Defaults
                                to 10s.
                              type: string
                            scaleDownDelayAfterAdd:
                              description: How long after the scale up of AKS nodes
                                the scale down evaluation resumes. Defaults to 10m.
                              type: string
                            scaleDownDelayAfterDelete:
                              description: How long after node deletion that scale
                                down evaluation resumes. Defaults to the value used
                                for scan_interval.
                              type: string
                            scaleDownDelayAfterFailure:
                              description: How long after scale down failure that
                                scale down evaluation resumes. Defaults to 3m.
                              type: string
                            scaleDownUnneeded:
                              description: How long a node should be unneeded before
                                it is eligible for scale down. Defaults to 10m.
                              type: string
                            scaleDownUnready:
                              description: How long an unready node should be unneeded
                                before it is eligible for scale down. Defaults to
                                20m.
                              type: string
                            scaleDownUtilizationThreshold:
                              description: Node utilization level, defined as sum
                                of requested resources divided by capacity, below
                                which a node can be considered for scale down. Defaults
                                to 0.5.
                              type: string
                            scanInterval:
                              description: How often the AKS Cluster should be re-evaluated
                                for scale up/down. Defaults to 10s.
                              type: string
                            skipNodesWithLocalStorage:
                              description: If true cluster autoscaler will never delete
                                nodes with pods with local storage, for example, EmptyDir
                                or HostPath. Defaults to true.
                              type: boolean
                            skipNodesWithSystemPods:
                              description: If true cluster autoscaler will never delete
                                nodes with pods from kube-system (except for DaemonSet
                                or mirror pods). Defaults to true.
                              type: boolean
                          type: object
                        type: array
                      automaticChannelUpgrade:
                        description: The upgrade channel for this Kubernetes Cluster.
                          Possible values are patch, rapid, node-image and stable.
                          Omitting this field sets this value to none.
                        type: string
                      azureActiveDirectoryRoleBasedAccessControl:
                        description: A azure_active_directory_role_based_access_control
                          block as defined below.
                        items:
                          properties:
                            adminGroupObjectIds:
                              description: A list of Object IDs of Azure Active Directory
                                Groups which should have Admin Role on the Cluster.
                              items:
                                type: string
                              type: array
                            azureRbacEnabled:
                              description: Is Role Based Access Control based on Azure
                                AD enabled?
                              type: boolean
                            clientAppId:
                              description: The Client ID of an Azure Active Directory
                                Application.
                              type: string
                            managed:
                              description: Is the Azure Active Directory integration
                                Managed, meaning that Azure will create/manage the
                                Service Principal used for integration.
                              type: boolean
                            serverAppId:
                              description: The Server ID of an Azure Active Directory
                                Application.
                              type: string
                            tenantId:
                              description: The Tenant ID used for Azure Active Directory
                                Application. If this isn't specified the Tenant ID
                                of the current Subscription is used.
                              type: string
                          type: object
                        type: array
                      azurePolicyEnabled:
                        description: Should the Azure Policy Add-On be enabled? For
                          more details please visit Understand Azure Policy for Azure
                          Kubernetes Service
                        type: boolean
                      confidentialComputing:
                        description: A confidential_computing block as defined below.
                          For more details please the documentation
                        items:
                          properties:
                            sgxQuoteHelperEnabled:
                              description: Should the SGX quote helper be enabled?
                              type: boolean
                          type: object
                        type: array
                      defaultNodePool:
                        description: A default_node_pool block as defined below.
                        items:
                          properties:
                            capacityReservationGroupId:
                              description: Specifies the ID of the Capacity Reservation
                                Group within which this AKS Cluster should be created.
                                Changing this forces a new resource to be created.
                              type: string
                            customCaTrustEnabled:
                              description: Specifies whether to trust a Custom CA.
                              type: boolean
                            enableAutoScaling:
                              description: Should the Kubernetes Auto Scaler be enabled
                                for this Node Pool?
                              type: boolean
                            enableHostEncryption:
                              description: Should the nodes in the Default Node Pool
                                have host encryption enabled? Changing this forces
                                a new resource to be created.
                              type: boolean
                            enableNodePublicIp:
                              description: Should nodes in this Node Pool have a Public
                                IP Address? Changing this forces a new resource to
                                be created.
                              type: boolean
                            fipsEnabled:
                              description: Should the nodes in this Node Pool have
                                Federal Information Processing Standard enabled? Changing
                                this forces a new resource to be created.
                              type: boolean
                            hostGroupId:
                              description: Specifies the ID of the Host Group within
                                which this AKS Cluster should be created. Changing
                                this forces a new resource to be created.
                              type: string
                            kubeletConfig:
                              description: A kubelet_config block as defined below.
                                Changing this forces a new resource to be created.
                              items:
                                properties:
                                  allowedUnsafeSysctls:
                                    description: Specifies the allow list of unsafe
                                      sysctls command or patterns (ending in *). Changing
                                      this forces a new resource to be created.
                                    items:
                                      type: string
                                    type: array
                                  containerLogMaxLine:
                                    description: Specifies the maximum number of container
                                      log files that can be present for a container.
                                      must be at least 2. Changing this forces a new
                                      resource to be created.
                                    type: number
                                  containerLogMaxSizeMb:
                                    description: Specifies the maximum size (e.g.
                                      10MB) of container log file before it is rotated.
                                      Changing this forces a new resource to be created.
                                    type: number
                                  cpuCfsQuotaEnabled:
                                    description: Is CPU CFS quota enforcement for
                                      containers enabled? Changing this forces a new
                                      resource to be created.
                                    type: boolean
                                  cpuCfsQuotaPeriod:
                                    description: Specifies the CPU CFS quota period
                                      value. Changing this forces a new resource to
                                      be created.
                                    type: string
                                  cpuManagerPolicy:
                                    description: Specifies the CPU Manager policy
                                      to use. Possible values are none and static,
                                      Changing this forces a new resource to be created.
                                    type: string
                                  imageGcHighThreshold:
                                    description: Specifies the percent of disk usage
                                      above which image garbage collection is always
                                      run. Must be between 0 and 100. Changing this
                                      forces a new resource to be created.
                                    type: number
                                  imageGcLowThreshold:
                                    description: Specifies the percent of disk usage
                                      lower than which image garbage collection is
                                      never run. Must be between 0 and 100. Changing
                                      this forces a new resource to be created.
                                    type: number
                                  podMaxPid:
                                    description: Specifies the maximum number of processes
                                      per pod. Changing this forces a new resource
                                      to be created.
                                    type: number
                                  topologyManagerPolicy:
                                    description: Specifies the Topology Manager policy
                                      to use. Possible values are none, best-effort,
                                      restricted or single-numa-node. Changing this
                                      forces a new resource to be created.
                                    type: string
                                type: object
                              type: array
                            kubeletDiskType:
                              description: The type of disk used by kubelet. Possible
                                values are OS and Temporary.
                              type: string
                            linuxOsConfig:
                              description: A linux_os_config block as defined below.
                                Changing this forces a new resource to be created.
                              items:
                                properties:
                                  swapFileSizeMb:
                                    description: Specifies the size of the swap file
                                      on each node in MB. Changing this forces a new
                                      resource to be created.
                                    type: number
                                  sysctlConfig:
                                    description: A sysctl_config block as defined
                                      below. Changing this forces a new resource to
                                      be created.
                                    items:
                                      properties:
                                        fsAioMaxNr:
                                          description: The sysctl setting fs.aio-max-nr.
                                            Must be between 65536 and 6553500. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        fsFileMax:
                                          description: The sysctl setting fs.file-max.
                                            Must be between 8192 and 12000500. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        fsInotifyMaxUserWatches:
                                          description: The sysctl setting fs.inotify.max_user_watches.
                                            Must be between 781250 and 2097152. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        fsNrOpen:
                                          description: The sysctl setting fs.nr_open.
                                            Must be between 8192 and 20000500. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        kernelThreadsMax:
                                          description: The sysctl setting kernel.threads-max.
                                            Must be between 20 and 513785. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netCoreNetdevMaxBacklog:
                                          description: The sysctl setting net.core.netdev_max_backlog.
                                            Must be between 1000 and 3240000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netCoreOptmemMax:
                                          description: The sysctl setting net.core.optmem_max.
                                            Must be between 20480 and 4194304. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netCoreRmemDefault:
                                          description: The sysctl setting net.core.rmem_default.
                                            Must be between 212992 and 134217728.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netCoreRmemMax:
                                          description: The sysctl setting net.core.rmem_max.
                                            Must be between 212992 and 134217728.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netCoreSomaxconn:
                                          description: The sysctl setting net.core.somaxconn.
                                            Must be between 4096 and 3240000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netCoreWmemDefault:
                                          description: The sysctl setting net.core.wmem_default.
                                            Must be between 212992 and 134217728.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netCoreWmemMax:
                                          description: The sysctl setting net.core.wmem_max.
                                            Must be between 212992 and 134217728.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netIpv4IpLocalPortRangeMax:
                                          description: The sysctl setting net.ipv4.ip_local_port_range
                                            max value. Must be between 1024 and 60999.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netIpv4IpLocalPortRangeMin:
                                          description: The sysctl setting net.ipv4.ip_local_port_range
                                            min value. Must be between 1024 and 60999.
                                            Changing this forces a new resource to
                                            be created.
                                          type: number
                                        netIpv4NeighDefaultGcThresh1:
                                          description: The sysctl setting net.ipv4.neigh.default.gc_thresh1.
                                            Must be between 128 and 80000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4NeighDefaultGcThresh2:
                                          description: The sysctl setting net.ipv4.neigh.default.gc_thresh2.
                                            Must be between 512 and 90000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4NeighDefaultGcThresh3:
                                          description: The sysctl setting net.ipv4.neigh.default.gc_thresh3.
                                            Must be between 1024 and 100000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4TcpFinTimeout:
                                          description: The sysctl setting net.ipv4.tcp_fin_timeout.
                                            Must be between 5 and 120. Changing this
                                            forces a new resource to be created.
                                          type: number
                                        netIpv4TcpKeepaliveIntvl:
                                          description: The sysctl setting net.ipv4.tcp_keepalive_intvl.
                                            Must be between 10 and 75. Changing this
                                            forces a new resource to be created.
                                          type: number
                                        netIpv4TcpKeepaliveProbes:
                                          description: The sysctl setting net.ipv4.tcp_keepalive_probes.
                                            Must be between 1 and 15. Changing this
                                            forces a new resource to be created.
                                          type: number
                                        netIpv4TcpKeepaliveTime:
                                          description: The sysctl setting net.ipv4.tcp_keepalive_time.
                                            Must be between 30 and 432000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4TcpMaxSynBacklog:
                                          description: The sysctl setting net.ipv4.tcp_max_syn_backlog.
                                            Must be between 128 and 3240000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4TcpMaxTwBuckets:
                                          description: The sysctl setting net.ipv4.tcp_max_tw_buckets.
                                            Must be between 8000 and 1440000. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netIpv4TcpTwReuse:
                                          description: The sysctl setting net.ipv4.tcp_tw_reuse.
                                            Changing this forces a new resource to
                                            be created.
                                          type: boolean
                                        netNetfilterNfConntrackBuckets:
                                          description: The sysctl setting net.netfilter.nf_conntrack_buckets.
                                            Must be between 65536 and 147456. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        netNetfilterNfConntrackMax:
                                          description: The sysctl setting net.netfilter.nf_conntrack_max.
                                            Must be between 131072 and 1048576. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        vmMaxMapCount:
                                          description: The sysctl setting vm.max_map_count.
                                            Must be between 65530 and 262144. Changing
                                            this forces a new resource to be created.
                                          type: number
                                        vmSwappiness:
                                          description: The sysctl setting vm.swappiness.
                                            Must be between 0 and 100. Changing this
                                            forces a new resource to be created.
                                          type: number
                                        vmVfsCachePressure:
                                          description: The sysctl setting vm.vfs_cache_pressure.
                                            Must be between 0 and 100. Changing this
                                            forces a new resource to be created.
                                          type: number
                                      type: object
                                    type: array
                                  transparentHugePageDefrag:
                                    description: specifies the defrag configuration
                                      for Transparent Huge Page. Possible values are
                                      always, defer, defer+madvise, madvise and never.
                                      Changing this forces a new resource to be created.
                                    type: string
                                  transparentHugePageEnabled:
                                    description: Specifies the Transparent Huge Page
                                      enabled configuration. Possible values are always,
                                      madvise and never. Changing this forces a new
                                      resource to be created.
                                    type: string
                                type: object
                              type: array
                            maxCount:
                              description: The maximum number of nodes which should
                                exist in this Node Pool. If specified this must be
                                between 1 and 1000.
                              type: number
                            maxPods:
                              description: The maximum number of pods that can run
                                on each agent. Changing this forces a new resource
                                to be created.
                              type: number
                            messageOfTheDay:
                              description: A base64-encoded string which will be written
                                to /etc/motd after decoding. This allows customization
                                of the message of the day for Linux nodes. It cannot
                                be specified for Windows nodes and must be a static
                                string (i.e. will be printed raw and not executed
                                as a script). Changing this forces a new resource
                                to be created.
                              type: string
                            minCount:
                              description: The minimum number of nodes which should
                                exist in this Node Pool. If specified this must be
                                between 1 and 1000.
                              type: number
                            name:
                              description: The name which should be used for the default
                                Kubernetes Node Pool. Changing this forces a new resource
                                to be created.
                              type: string
                            nodeCount:
                              description: The initial number of nodes which should
                                exist in this Node Pool. If specified this must be
                                between 1 and 1000 and between min_count and max_count.
                              type: number
                            nodeLabels:
                              additionalProperties:
                                type: string
                              description: A map of Kubernetes labels which should
                                be applied to nodes in the Default Node Pool.
                              type: object
                            nodeNetworkProfile:
                              description: A node_network_profile block as documented
                                below.
                              items:
                                properties:
                                  nodePublicIpTags:
                                    additionalProperties:
                                      type: string
                                    description: Specifies a mapping of tags to the
                                      instance-level public IPs. Changing this forces
                                      a new resource to be created.
                                    type: object
                                type: object
                              type: array
                            nodePublicIpPrefixId:
                              description: Resource ID for the Public IP Addresses
                                Prefix for the nodes in this Node Pool. enable_node_public_ip
                                should be true. Changing this forces a new resource
                                to be created.
                              type: string
                            nodeTaints:
                              description: A list of the taints added to new nodes
                                during node pool create and scale. Changing this forces
                                a new resource to be created.
                              items:
                                type: string
                              type: array
                            onlyCriticalAddonsEnabled:
                              description: Enabling this option will taint default
                                node pool with CriticalAddonsOnly=true:NoSchedule
                                taint. Changing this forces a new resource to be created.
                              type: boolean
                            orchestratorVersion:
                              description: Version of Kubernetes used for the Agents.
                                If not specified, the default node pool will be created
                                with the version specified by kubernetes_version.
                                If both are unspecified, the latest recommended version
                                will be used at provisioning time (but won't auto-upgrade).
                                AKS does not require an exact patch version to be
                                specified, minor version aliases such as 1.22 are
                                also supported. - The minor version's latest GA patch
                                is automatically chosen in that case. More details
                                can be found in the documentation.
                              type: string
                            osDiskSizeGb:
                              description: The size of the OS Disk which should be
                                used for each agent in the Node Pool. Changing this
                                forces a new resource to be created.
                              type: number
                            osDiskType:
                              description: The type of disk which should be used for
                                the Operating System. Possible values are Ephemeral
                                and Managed. Defaults to Managed. Changing this forces
                                a new resource to be created.
                              type: string
                            osSku:
                              description: 'Specifies the OS SKU used by the agent
                                pool. Possible values include: Ubuntu, CBLMariner,
                                Mariner, Windows2019, Windows2022. If not specified,
                                the default is Ubuntu if OSType=Linux or Windows2019
                                if OSType=Windows. And the default Windows OSSKU will
                                be changed to Windows2022 after Windows2019 is deprecated.
                                Changing this forces a new resource to be created.'
                              type: string
                            podSubnetId:
                              description: The ID of the Subnet where the pods in
                                the default Node Pool should exist. Changing this
                                forces a new resource to be created.
                              type: string
                            proximityPlacementGroupId:
                              description: The ID of the Proximity Placement Group.
                                Changing this forces a new resource to be created.
                              type: string
                            scaleDownMode:
                              description: Specifies the autoscaling behaviour of
                                the Kubernetes Cluster. Allowed values are Delete
                                and Deallocate. Defaults to Delete.
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: A mapping of tags to assign to the Node
                                Pool.
                              type: object
                            temporaryNameForRotation:
                              description: Specifies the name of the temporary node
                                pool used to cycle the default node pool for VM resizing.
                              type: string
                            type:
                              description: The type of Node Pool which should be created.
                                Possible values are AvailabilitySet and VirtualMachineScaleSets.
                                Defaults to VirtualMachineScaleSets. Changing this
                                forces a new resource to be created.
                              type: string
                            ultraSsdEnabled:
                              description: Used to specify whether the UltraSSD is
                                enabled in the Default Node Pool. Defaults to false.
                                See the documentation for more information. Changing
                                this forces a new resource to be created.
                              type: boolean
                            upgradeSettings:
                              description: A upgrade_settings block as documented
                                below.
                              items:
                                properties:
                                  maxSurge:
                                    description: The maximum number or percentage
                                      of nodes which will be added to the Node Pool
                                      size during an upgrade.
                                    type: string
                                type: object
                              type: array
                            vmSize:
                              description: The size of the Virtual Machine, such as
                                Standard_DS2_v2.
                              type: string
                            vnetSubnetId:
                              description: The ID of a Subnet where the Kubernetes
                                Node Pool should exist. Changing this forces a new
                                resource to be created.
                              type: string
                            workloadRuntime:
                              description: Specifies the workload runtime used by
                                the node pool. Possible values are OCIContainer and
                                KataMshvVmIsolation.
                              type: string
                            zones:
                              description: Specifies a list of Availability Zones
                                in which this Kubernetes Cluster should be located.
                                Changing this forces a new Kubernetes Cluster to be
                                created.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      diskEncryptionSetId:
                        description: The ID of the Disk Encryption Set which should
                          be used for the Nodes and Volumes. More information can
                          be found in the documentation. Changing this forces a new
                          resource to be created.
                        type: string
                      dnsPrefix:
                        description: DNS prefix specified when creating the managed
                          cluster. Possible values must begin and end with a letter
                          or number, contain only letters, numbers, and hyphens and
                          be between 1 and 54 characters in length. Changing this
                          forces a new resource to be created.
                        type: string
                      dnsPrefixPrivateCluster:
                        description: Specifies the DNS prefix to use with private
                          clusters. Changing this forces a new resource to be created.
                        type: string
                      edgeZone:
                        description: Specifies the Edge Zone within the Azure Region
                          where this Managed Kubernetes Cluster should exist. Changing
                          this forces a new resource to be created.
                        type: string
                      enablePodSecurityPolicy:
                        type: boolean
                      fqdn:
                        description: The FQDN of the Azure Kubernetes Managed Cluster.
                        type: string
                      httpApplicationRoutingEnabled:
                        description: Should HTTP Application Routing be enabled?
                        type: boolean
                      httpApplicationRoutingZoneName:
                        description: The Zone Name of the HTTP Application Routing.
                        type: string
                      httpProxyConfig:
                        description: A http_proxy_config block as defined below.
                        items:
                          properties:
                            httpProxy:
                              description: The proxy address to be used when communicating
                                over HTTP. Changing this forces a new resource to
                                be created.
                              type: string
                            httpsProxy:
                              description: The proxy address to be used when communicating
                                over HTTPS. Changing this forces a new resource to
                                be created.
                              type: string
                            noProxy:
                              description: The list of domains that will not use the
                                proxy for communication.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      id:
                        description: The Kubernetes Managed Cluster ID.
                        type: string
                      identity:
                        description: An identity block as defined below. One of either
                          identity or service_principal must be specified.
                        items:
                          properties:
                            identityIds:
                              description: Specifies a list of User Assigned Managed
                                Identity IDs to be assigned to this Kubernetes Cluster.
                              items:
                                type: string
                              type: array
                            principalId:
                              description: The Principal ID associated with this Managed
                                Service Identity.
                              type: string
                            tenantId:
                              description: The Tenant ID associated with this Managed
                                Service Identity.
                              type: string
                            type:
                              description: Specifies the type of Managed Service Identity
                                that should be configured on this Kubernetes Cluster.
                                Possible values are SystemAssigned or UserAssigned.
                              type: string
                          type: object
                        type: array
                      imageCleanerEnabled:
                        description: Specifies whether Image Cleaner is enabled.
                        type: boolean
                      imageCleanerIntervalHours:
                        description: Specifies the interval in hours when images should
                          be cleaned up. Defaults to 48.
                        type: number
                      ingressApplicationGateway:
                        description: An ingress_application_gateway block as defined
                          below.
                        items:
                          properties:
                            effectiveGatewayId:
                              description: The ID of the Application Gateway associated
                                with the ingress controller deployed to this Kubernetes
                                Cluster.
                              type: string
                            gatewayId:
                              description: The ID of the Application Gateway to integrate
                                with the ingress controller of this Kubernetes Cluster.
                                See this page for further details.
                              type: string
                            gatewayName:
                              description: The name of the Application Gateway to
                                be used or created in the Nodepool Resource Group,
                                which in turn will be integrated with the ingress
                                controller of this Kubernetes Cluster. See this page
                                for further details.
                              type: string
                            ingressApplicationGatewayIdentity:
                              description: An ingress_application_gateway_identity
                                block is exported. The exported attributes are defined
                                below.
                              items:
                                properties:
                                  clientId:
                                    description: The Client ID for the Service Principal.
                                    type: string
                                  objectId:
                                    description: The Object ID of the user-defined
                                      Managed Identity used by the OMS Agents.
                                    type: string
                                  userAssignedIdentityId:
                                    description: The ID of the User Assigned Identity
                                      used by the OMS Agents.
                                    type: string
                                type: object
                              type: array
                            subnetCidr:
                              description: The subnet CIDR to be used to create an
                                Application Gateway, which in turn will be integrated
                                with the ingress controller of this Kubernetes Cluster.
                                See this page for further details.
                              type: string
                            subnetId:
                              description: The ID of the subnet on which to create
                                an Application Gateway, which in turn will be integrated
                                with the ingress controller of this Kubernetes Cluster.
                                See this page for further details.
                              type: string
                          type: object
                        type: array
                      keyManagementService:
                        description: A key_management_service block as defined below.
                          For more details, please visit Key Management Service (KMS)
                          etcd encryption to an AKS cluster.
                        items:
                          properties:
                            keyVaultKeyId:
                              description: Identifier of Azure Key Vault key. See
                                key identifier format for more details. When Azure
                                Key Vault key management service is enabled, this
                                field is required and must be a valid key identifier.
                                When enabled is false, leave the field empty.
                              type: string
                            keyVaultNetworkAccess:
                              description: Network access of the key vault Network
                                access of key vault. The possible values are Public
                                and Private. Public means the key vault allows public
                                access from all networks. Private means the key vault
                                disables public access and enables private link. The
                                default value is Public.
                              type: string
                          type: object
                        type: array
                      keyVaultSecretsProvider:
                        description: A key_vault_secrets_provider block as defined
                          below.
                        items:
                          properties:
                            secretIdentity:
                              description: An secret_identity block is exported. The
                                exported attributes are defined below.
                              items:
                                properties:
                                  clientId:
                                    description: The Client ID of the user-defined
                                      Managed Identity used by the Secret Provider.
                                    type: string
                                  objectId:
                                    description: The Object ID of the user-defined
                                      Managed Identity used by the Secret Provider.
                                    type: string
                                  userAssignedIdentityId:
                                    description: The ID of the User Assigned Identity
                                      used by the Secret Provider.
                                    type: string
                                type: object
                              type: array
                            secretRotationEnabled:
                              description: Should the secret store CSI driver on the
                                AKS cluster be enabled?
                              type: boolean
                            secretRotationInterval:
                              description: The interval to poll for secret rotation.
                                This attribute is only set when secret_rotation is
                                true and defaults to 2m.
                              type: string
                          type: object
                        type: array
                      kubeletIdentity:
                        description: A kubelet_identity block as defined below.
                        items:
                          properties:
                            clientId:
                              description: The Client ID of the user-defined Managed
                                Identity to be assigned to the Kubelets. If not specified
                                a Managed Identity is created automatically. Changing
                                this forces a new resource to be created.
                              type: string
                            objectId:
                              description: The Object ID of the user-defined Managed
                                Identity assigned to the Kubelets.If not specified
                                a Managed Identity is created automatically. Changing
                                this forces a new resource to be created.
                              type: string
                            userAssignedIdentityId:
                              description: The ID of the User Assigned Identity assigned
                                to the Kubelets. If not specified a Managed Identity
                                is created automatically. Changing this forces a new
                                resource to be created.
                              type: string
                          type: object
                        type: array
                      kubernetesVersion:
                        description: Version of Kubernetes specified when creating
                          the AKS managed cluster. If not specified, the latest recommended
                          version will be used at provisioning time (but won't auto-upgrade).
                          AKS does not require an exact patch version to be specified,
                          minor version aliases such as 1.22 are also supported. -
                          The minor version's latest GA patch is automatically chosen
                          in that case. More details can be found in the documentation.
                        type: string
                      linuxProfile:
                        description: A linux_profile block as defined below.
                        items:
                          properties:
                            adminUsername:
                              description: The Admin Username for the Cluster. Changing
                                this forces a new resource to be created.
                              type: string
                            sshKey:
                              description: An ssh_key block. Only one is currently
                                allowed. Changing this will update the key on all
                                node pools. More information can be found in the documentation.
                              items:
                                properties:
                                  keyData:
                                    description: The Public SSH Key used to access
                                      the cluster.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      localAccountDisabled:
                        description: If true local accounts will be disabled. See
                          the documentation for more information.
                        type: boolean
                      location:
                        description: The location where the Managed Kubernetes Cluster
                          should be created. Changing this forces a new resource to
                          be created.
                        type: string
                      maintenanceWindow:
                        description: A maintenance_window block as defined below.
                        items:
                          properties:
                            allowed:
                              description: One or more allowed blocks as defined below.
                              items:
                                properties:
                                  day:
                                    description: A day in a week. Possible values
                                      are Sunday, Monday, Tuesday, Wednesday, Thursday,
                                      Friday and Saturday.
                                    type: string
                                  hours:
                                    description: An array of hour slots in a day.
                                      For example, specifying 1 will allow maintenance
                                      from 1:00am to 2:00am. Specifying 1, 2 will
                                      allow maintenance from 1:00am to 3:00m. Possible
                                      values are between 0 and 23.
                                    items:
                                      type: number
                                    type: array
                                type: object
                              type: array
                            notAllowed:
                              description: One or more not_allowed block as defined
                                below.
                              items:
                                properties:
                                  end:
                                    description: The end of a time span, formatted
                                      as an RFC3339 string.
                                    type: string
                                  start:
                                    description: The start of a time span, formatted
                                      as an RFC3339 string.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      microsoftDefender:
                        description: A microsoft_defender block as defined below.
                        items:
                          properties:
                            logAnalyticsWorkspaceId:
                              description: Specifies the ID of the Log Analytics Workspace
                                where the audit logs collected by Microsoft Defender
                                should be sent to.
                              type: string
                          type: object
                        type: array
                      monitorMetrics:
                        description: Specifies a Prometheus add-on profile for the
                          Kubernetes Cluster. A monitor_metrics block as defined below.
                        items:
                          properties:
                            annotationsAllowed:
                              description: Specifies a comma-separated list of Kubernetes
                                annotation keys that will be used in the resource's
                                labels metric.
                              type: string
                            labelsAllowed:
                              description: Specifies a Comma-separated list of additional
                                Kubernetes label keys that will be used in the resource's
                                labels metric.
                              type: string
                          type: object
                        type: array
                      networkProfile:
                        description: A network_profile block as defined below.
                        items:
                          properties:
                            dnsServiceIp:
                              description: IP address within the Kubernetes service
                                address range that will be used by cluster service
                                discovery (kube-dns). Changing this forces a new resource
                                to be created.
                              type: string
                            dockerBridgeCidr:
                              description: IP address (in CIDR notation) used as the
                                Docker bridge IP address on nodes. Changing this forces
                                a new resource to be created.
                              type: string
                            ebpfDataPlane:
                              description: Specifies the eBPF data plane used for
                                building the Kubernetes network. Possible value is
                                cilium. Changing this forces a new resource to be
                                created.
                              type: string
                            ipVersions:
                              description: Specifies a list of IP versions the Kubernetes
                                Cluster will use to assign IP addresses to its nodes
                                and pods. Possible values are IPv4 and/or IPv6. IPv4
                                must always be specified. Changing this forces a new
                                resource to be created.
                              items:
                                type: string
                              type: array
                            loadBalancerProfile:
                              description: A load_balancer_profile block as defined
                                below. This can only be specified when load_balancer_sku
                                is set to standard. Changing this forces a new resource
                                to be created.
                              items:
                                properties:
                                  effectiveOutboundIps:
                                    description: The outcome (resource IDs) of the
                                      specified arguments.
                                    items:
                                      type: string
                                    type: array
                                  idleTimeoutInMinutes:
                                    description: Desired outbound flow idle timeout
                                      in minutes for the cluster load balancer. Must
                                      be between 4 and 120 inclusive. Defaults to
                                      4.
                                    type: number
                                  managedOutboundIpCount:
                                    description: Count of desired managed outbound
                                      IPs for the cluster load balancer. Must be between
                                      1 and 100 inclusive.
                                    type: number
                                  managedOutboundIpv6Count:
                                    description: The desired number of IPv6 outbound
                                      IPs created and managed by Azure for the cluster
                                      load balancer. Must be in the range of 1 to
                                      100 (inclusive). The default value is 0 for
                                      single-stack and 1 for dual-stack.
                                    type: number
                                  outboundIpAddressIds:
                                    description: The ID of the Public IP Addresses
                                      which should be used for outbound communication
                                      for the cluster load balancer.
                                    items:
                                      type: string
                                    type: array
                                  outboundIpPrefixIds:
                                    description: The ID of the outbound Public IP
                                      Address Prefixes which should be used for the
                                      cluster load balancer.
                                    items:
                                      type: string
                                    type: array
                                  outboundPortsAllocated:
                                    description: Number of desired SNAT port for each
                                      VM in the clusters load balancer. Must be between
                                      0 and 64000 inclusive. Defaults to 0.
                                    type: number
                                type: object
                              type: array
                            loadBalancerSku:
                              description: Specifies the SKU of the Load Balancer
                                used for this Kubernetes Cluster. Possible values
                                are basic and standard. Defaults to standard. Changing
                                this forces a new resource to be created.
                              type: string
                            natGatewayProfile:
                              description: A nat_gateway_profile block as defined
                                below.
                              items:
                                properties:
                                  effectiveOutboundIps:
                                    description: The outcome (resource IDs) of the
                                      specified arguments.
                                    items:
                                      type: string
                                    type: array
                                  idleTimeoutInMinutes:
                                    description: Desired outbound flow idle timeout
                                      in minutes for the cluster load balancer. Must
                                      be between 4 and 120 inclusive. Defaults to
                                      4.
                                    type: number
                                  managedOutboundIpCount:
                                    description: Count of desired managed outbound
                                      IPs for the cluster load balancer. Must be between
                                      1 and 100 inclusive.
                                    type: number
                                type: object
                              type: array
                            networkMode:
                              description: Network mode to be used with Azure CNI.
                                Possible values are bridge and transparent. Changing
                                this forces a new resource to be created.
                              type: string
                            networkPlugin:
                              description: Network plugin to use for networking. Currently
                                supported values are azure, kubenet and none. Changing
                                this forces a new resource to be created.
                              type: string
                            networkPluginMode:
                              description: Specifies the network plugin mode used
                                for building the Kubernetes network. Possible value
                                is Overlay. Changing this forces a new resource to
                                be created.
                              type: string
                            networkPolicy:
                              description: Sets up network policy to be used with
                                Azure CNI. Network policy allows us to control the
                                traffic flow between pods. Currently supported values
                                are calico and azure. Changing this forces a new resource
                                to be created.
                              type: string
                            outboundType:
                              description: The outbound (egress) routing method which
                                should be used for this Kubernetes Cluster. Possible
                                values are loadBalancer, userDefinedRouting, managedNATGateway
                                and userAssignedNATGateway. Defaults to loadBalancer.
                                Changing this forces a new resource to be created.
                              type: string
                            podCidr:
                              description: The CIDR to use for pod IP addresses. This
                                field can only be set when network_plugin is set to
                                kubenet. Changing this forces a new resource to be
                                created.
                              type: string
                            podCidrs:
                              description: A list of CIDRs to use for pod IP addresses.
                                For single-stack networking a single IPv4 CIDR is
                                expected. For dual-stack networking an IPv4 and IPv6
                                CIDR are expected. Changing this forces a new resource
                                to be created.
                              items:
                                type: string
                              type: array
                            serviceCidr:
                              description: The Network Range used by the Kubernetes
                                service. Changing this forces a new resource to be
                                created.
                              type: string
                            serviceCidrs:
                              description: A list of CIDRs to use for Kubernetes services.
                                For single-stack networking a single IPv4 CIDR is
                                expected. For dual-stack networking an IPv4 and IPv6
                                CIDR are expected. Changing this forces a new resource
                                to be created.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      nodeResourceGroup:
                        description: The auto-generated Resource Group which contains
                          the resources for this Managed Kubernetes Cluster.
                        type: string
                      nodeResourceGroupId:
                        description: The ID of the Resource Group containing the resources
                          for this Managed Kubernetes Cluster.
                        type: string
                      oidcIssuerEnabled:
                        description: Enable or Disable the OIDC issuer URL
                        type: boolean
                      oidcIssuerUrl:
                        description: The OIDC issuer URL that is associated with the
                          cluster.
                        type: string
                      omsAgent:
                        description: An oms_agent block as defined below.
                        items:
                          properties:
                            logAnalyticsWorkspaceId:
                              description: The ID of the Log Analytics Workspace which
                                the OMS Agent should send data to.
                              type: string
                            msiAuthForMonitoringEnabled:
                              description: Is managed identity authentication for
                                monitoring enabled?
                              type: boolean
                            omsAgentIdentity:
                              description: An oms_agent_identity block is exported.
                                The exported attributes are defined below.
                              items:
                                properties:
                                  clientId:
                                    description: The Client ID of the user-defined
                                      Managed Identity used by the OMS Agents.
                                    type: string
                                  objectId:
                                    description: The Object ID of the user-defined
                                      Managed Identity used by the OMS Agents.
                                    type: string
                                  userAssignedIdentityId:
                                    description: The ID of the User Assigned Identity
                                      used by the OMS Agents.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      openServiceMeshEnabled:
                        description: Is Open Service Mesh enabled? For more details,
                          please visit Open Service Mesh for AKS.
                        type: boolean
                      portalFqdn:
                        description: The FQDN for the Azure Portal resources when
                          private link has been enabled, which is only resolvable
                          inside the Virtual Network used by the Kubernetes Cluster.
                        type: string
                      privateClusterEnabled:
                        description: Should this Kubernetes Cluster have its API server
                          only exposed on internal IP addresses? This provides a Private
                          IP Address for the Kubernetes API on the Virtual Network
                          where the Kubernetes Cluster is located. Defaults to false.
                          Changing this forces a new resource to be created.
                        type: boolean
                      privateClusterPublicFqdnEnabled:
                        description: Specifies whether a Public FQDN for this Private
                          Cluster should be added. Defaults to false.
                        type: boolean
                      privateDnsZoneId:
                        description: Either the ID of Private DNS Zone which should
                          be delegated to this Cluster, System to have AKS manage
                          this or None. In case of None you will need to bring your
                          own DNS server and set up resolving, otherwise, the cluster
                          will have issues after provisioning. Changing this forces
                          a new resource to be created.
                        type: string
                      privateFqdn:
                        description: The FQDN for the Kubernetes Cluster when private
                          link has been enabled, which is only resolvable inside the
                          Virtual Network used by the Kubernetes Cluster.
                        type: string
                      publicNetworkAccessEnabled:
                        description: Whether public network access is allowed for
                          this Kubernetes Cluster. Defaults to true. Changing this
                          forces a new resource to be created.
                        type: boolean
                      resourceGroupName:
                        description: Specifies the Resource Group where the Managed
                          Kubernetes Cluster should exist. Changing this forces a
                          new resource to be created.
                        type: string
                      roleBasedAccessControlEnabled:
                        description: Whether Role Based Access Control for the Kubernetes
                          Cluster should be enabled. Defaults to true. Changing this
                          forces a new resource to be created.
                        type: boolean
                      runCommandEnabled:
                        description: Whether to enable run command for the cluster
                          or not. Defaults to true.
                        type: boolean
                      serviceMeshProfile:
                        description: A service_mesh_profile block as defined below.
                        items:
                          properties:
                            mode:
                              description: The mode of the service mesh. Possible
                                value is Istio.
                              type: string
                          type: object
                        type: array
                      servicePrincipal:
                        description: A service_principal block as documented below.
                          One of either identity or service_principal must be specified.
                        items:
                          properties:
                            clientId:
                              description: The Client ID for the Service Principal.
                              type: string
                          type: object
                        type: array
                      skuTier:
                        description: The SKU Tier that should be used for this Kubernetes
                          Cluster. Possible values are Free, and Standard (which includes
                          the Uptime SLA). Defaults to Free.
                        type: string
                      storageProfile:
                        description: A storage_profile block as defined below.
                        items:
                          properties:
                            blobDriverEnabled:
                              description: Is the Blob CSI driver enabled? Defaults
                                to false.
                              type: boolean
                            diskDriverEnabled:
                              description: Is the Disk CSI driver enabled? Defaults
                                to true.
                              type: boolean
                            diskDriverVersion:
                              description: Disk CSI Driver version to be used. Possible
                                values are v1 and v2. Defaults to v1.
                              type: string
                            fileDriverEnabled:
                              description: Is the File CSI driver enabled? Defaults
                                to true.
                              type: boolean
                            snapshotControllerEnabled:
                              description: Is the Snapshot Controller enabled? Defaults
                                to true.
                              type: boolean
                          type: object
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: A mapping of tags to assign to the resource.
                        type: object
                      webAppRouting:
                        description: A web_app_routing block as defined below.
                        items:
                          properties:
                            dnsZoneId:
                              description: Specifies the ID of the DNS Zone in which
                                DNS entries are created for applications deployed
                                to the cluster when Web App Routing is enabled. For
                                Bring-Your-Own DNS zones this property should be set
                                to an empty string "".
                              type: string
                          type: object
                        type: array
                      windowsProfile:
                        description: A windows_profile block as defined below.
                        items:
                          properties:
                            adminUsername:
                              description: The Admin Username for Windows VMs. Changing
                                this forces a new resource to be created.
                              type: string
                            gmsa:
                              description: A gmsa block as defined below.
                              items:
                                properties:
                                  dnsServer:
                                    description: Specifies the DNS server for Windows
                                      gMSA. Set this to an empty string if you have
                                      configured the DNS server in the VNet which
                                      was used to create the managed cluster.
                                    type: string
                                  rootDomain:
                                    description: Specifies the root domain name for
                                      Windows gMSA. Set this to an empty string if
                                      you have configured the DNS server in the VNet
                                      which was used to create the managed cluster.
                                    type: string
                                type: object
                              type: array
                            license:
                              description: Specifies the type of on-premise license
                                which should be used for Node Pool Windows Virtual
                                Machine. At this time the only possible value is Windows_Server.
                              type: string
                          type: object
                        type: array
                      workloadAutoscalerProfile:
                        description: A workload_autoscaler_profile block defined below.
                        items:
                          properties:
                            kedaEnabled:
                              description: Specifies whether KEDA Autoscaler can be
                                used for workloads.
                              type: boolean
                            verticalPodAutoscalerControlledValues:
                              description: Which resources values should be controlled.
                              type: string
                            verticalPodAutoscalerEnabled:
                              description: Specifies whether Vertical Pod Autoscaler
                                should be enabled.
                              type: boolean
                            verticalPodAutoscalerUpdateMode:
                              description: How the autoscaler applies changes to pod
                                resources.
                              type: string
                          type: object
                        type: array
                      workloadIdentityEnabled:
                        description: Specifies whether Azure AD Workload Identity
                          should be enabled for the Cluster. Defaults to false.
                        type: boolean
              gcp:
                description: Contains the details for gcp objects required to be
                  mapped to capg
                type: object
                properties:
                  cluster:
                    type: object
                    properties:
                      addonsConfig:
                        description: The configuration for addons supported by GKE.
                          Structure is documented below.
                        items:
                          properties:
                            cloudrunConfig:
                              description: . Structure is documented below.
                              items:
                                properties:
                                  disabled:
                                    description: The status of the Istio addon, which
                                      makes it easy to set up Istio for services in
                                      a cluster. It is disabled by default. Set disabled
                                      = false to enable.
                                    type: boolean
                                  loadBalancerType:
                                    description: The load balancer type of CloudRun
                                      ingress service. It is external load balancer
                                      by default. Set load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL
                                      to configure it as internal load balancer.
                                    type: string
                                type: object
                              type: array
                            configConnectorConfig:
                              description: . The status of the ConfigConnector addon.
                                It is disabled by default; Set enabled = true to enable.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            dnsCacheConfig:
                              description: . The status of the NodeLocal DNSCache
                                addon. It is disabled by default. Set enabled = true
                                to enable.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            gcePersistentDiskCsiDriverConfig:
                              description: . Whether this cluster should enable the
                                Google Compute Engine Persistent Disk Container Storage
                                Interface (CSI) Driver. Defaults to disabled; set
                                enabled = true to enabled.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            gcpFilestoreCsiDriverConfig:
                              description: The status of the Filestore CSI driver
                                addon, which allows the usage of filestore instance
                                as volumes. It is disabled by default; set enabled
                                = true to enable.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            gcsFuseCsiDriverConfig:
                              description: The status of the GCSFuse CSI driver addon,
                                which allows the usage of a gcs bucket as volumes.
                                It is disabled by default; set enabled = true to enable.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            gkeBackupAgentConfig:
                              description: . The status of the Backup for GKE agent
                                addon. It is disabled by default; Set enabled = true
                                to enable.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            horizontalPodAutoscaling:
                              description: The status of the Horizontal Pod Autoscaling
                                addon, which increases or decreases the number of
                                replica pods a replication controller has based on
                                the resource usage of the existing pods. It is enabled
                                by default; set disabled = true to disable.
                              items:
                                properties:
                                  disabled:
                                    description: The status of the Istio addon, which
                                      makes it easy to set up Istio for services in
                                      a cluster. It is disabled by default. Set disabled
                                      = false to enable.
                                    type: boolean
                                type: object
                              type: array
                            httpLoadBalancing:
                              description: The status of the HTTP (L7) load balancing
                                controller addon, which makes it easy to set up HTTP
                                load balancers for services in a cluster. It is enabled
                                by default; set disabled = true to disable.
                              items:
                                properties:
                                  disabled:
                                    description: The status of the Istio addon, which
                                      makes it easy to set up Istio for services in
                                      a cluster. It is disabled by default. Set disabled
                                      = false to enable.
                                    type: boolean
                                type: object
                              type: array
                            networkPolicyConfig:
                              description: Whether we should enable the network policy
                                addon for the master.  This must be enabled in order
                                to enable network policy for the nodes. To enable
                                this, you must also define a network_policy block,
                                otherwise nothing will happen. It can only be disabled
                                if the nodes already do not have network policies
                                enabled. Defaults to disabled; set disabled = false
                                to enable.
                              items:
                                properties:
                                  disabled:
                                    description: The status of the Istio addon, which
                                      makes it easy to set up Istio for services in
                                      a cluster. It is disabled by default. Set disabled
                                      = false to enable.
                                    type: boolean
                                type: object
                              type: array
                          type: object
                        type: array
                      allowNetAdmin:
                        description: Enable NET_ADMIN for the cluster. Defaults to
                          false. This field should only be enabled for Autopilot clusters
                          (enable_autopilot set to true).
                        type: boolean
                      authenticatorGroupsConfig:
                        description: Configuration for the Google Groups for GKE feature.
                          Structure is documented below.
                        items:
                          properties:
                            securityGroup:
                              description: The name of the RBAC security group for
                                use with Google security groups in Kubernetes RBAC.
                                Group name must be in format gke-security-groups@yourdomain.com.
                              type: string
                          type: object
                        type: array
                      binaryAuthorization:
                        description: Configuration options for the Binary Authorization
                          feature. Structure is documented below.
                        items:
                          properties:
                            enabled:
                              description: (DEPRECATED) Enable Binary Authorization
                                for this cluster. Deprecated in favor of evaluation_mode.
                              type: boolean
                            evaluationMode:
                              description: Mode of operation for Binary Authorization
                                policy evaluation. Valid values are DISABLED and PROJECT_SINGLETON_POLICY_ENFORCE.
                                PROJECT_SINGLETON_POLICY_ENFORCE is functionally equivalent
                                to the deprecated enable_binary_authorization parameter
                                being set to true.
                              type: string
                          type: object
                        type: array
                      clusterAutoscaling:
                        description: Per-cluster configuration of Node Auto-Provisioning
                          with Cluster Autoscaler to automatically adjust the size
                          of the cluster and create/delete node pools based on the
                          current needs of the cluster's workload. See the guide to
                          using Node Auto-Provisioning for more details. Structure
                          is documented below.
                        items:
                          properties:
                            autoProvisioningDefaults:
                              description: Contains defaults for a node pool created
                                by NAP. A subset of fields also apply to GKE Autopilot
                                clusters. Structure is documented below.
                              items:
                                properties:
                                  bootDiskKmsKey:
                                    description: 'The Customer Managed Encryption
                                      Key used to encrypt the boot disk attached to
                                      each node in the node pool. This should be of
                                      the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
                                      For more information about protecting resources
                                      with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
                                    type: string
                                  diskSize:
                                    description: Size of the disk attached to each
                                      node, specified in GB. The smallest allowed
                                      disk size is 10GB. Defaults to 100
                                    type: number
                                  diskType:
                                    description: Type of the disk attached to each
                                      node (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd').
                                      If unspecified, the default disk type is 'pd-standard'
                                    type: string
                                  imageType:
                                    description: The image type to use for this node.
                                      Note that changing the image type will delete
                                      and recreate all nodes in the node pool.
                                    type: string
                                  management:
                                    description: NodeManagement configuration for
                                      this NodePool. Structure is documented below.
                                    items:
                                      properties:
                                        autoRepair:
                                          description: Specifies whether the node
                                            auto-repair is enabled for the node pool.
                                            If enabled, the nodes in this node pool
                                            will be monitored and, if they fail health
                                            checks too many times, an automatic repair
                                            action will be triggered.
                                          type: boolean
                                        autoUpgrade:
                                          description: Specifies whether node auto-upgrade
                                            is enabled for the node pool. If enabled,
                                            node auto-upgrade helps keep the nodes
                                            in your node pool up to date with the
                                            latest release version of Kubernetes.
                                          type: boolean
                                        upgradeOptions:
                                          description: Specifies the Auto Upgrade
                                            knobs for the node pool.
                                          items:
                                            properties:
                                              autoUpgradeStartTime:
                                                type: string
                                              description:
                                                description: Description of the cluster.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  minCpuPlatform:
                                    description: Minimum CPU platform to be used by
                                      this instance. The instance may be scheduled
                                      on the specified or newer CPU platform. Applicable
                                      values are the friendly names of CPU platforms,
                                      such as Intel Haswell. See the official documentation
                                      for more information.
                                    type: string
                                  oauthScopes:
                                    description: The set of Google API scopes to be
                                      made available on all of the node VMs under
                                      the "default" service account. Use the "https://www.googleapis.com/auth/cloud-platform"
                                      scope to grant access to all APIs. It is recommended
                                      that you set service_account to a non-default
                                      service account and grant IAM roles to that
                                      service account for only the resources that
                                      it needs.
                                    items:
                                      type: string
                                    type: array
                                  serviceAccount:
                                    description: The service account to be used by
                                      the Node VMs. If not specified, the "default"
                                      service account is used.
                                    type: string
                                  shieldedInstanceConfig:
                                    description: Shielded Instance options. Structure
                                      is documented below.
                                    items:
                                      properties:
                                        enableIntegrityMonitoring:
                                          description: Defines if the instance has
                                            integrity monitoring enabled.
                                          type: boolean
                                        enableSecureBoot:
                                          description: Defines if the instance has
                                            Secure Boot enabled.
                                          type: boolean
                                      type: object
                                    type: array
                                  upgradeSettings:
                                    description: Specifies the upgrade settings for
                                      NAP created node pools. Structure is documented
                                      below.
                                    items:
                                      properties:
                                        blueGreenSettings:
                                          description: Settings for blue-green upgrade
                                            strategy. To be specified when strategy
                                            is set to BLUE_GREEN. Structure is documented
                                            below.
                                          items:
                                            properties:
                                              nodePoolSoakDuration:
                                                description: 'Time needed after draining
                                                  entire blue pool. After this period,
                                                  blue pool will be cleaned up. A
                                                  duration in seconds with up to nine
                                                  fractional digits, ending with ''s''.
                                                  Example: "3.5s".'
                                                type: string
                                              standardRolloutPolicy:
                                                description: green upgrade. To be
                                                  specified when strategy is set to
                                                  BLUE_GREEN. Structure is documented
                                                  below.
                                                items:
                                                  properties:
                                                    batchNodeCount:
                                                      description: Number of blue
                                                        nodes to drain in a batch.
                                                        Only one of the batch_percentage
                                                        or batch_node_count can be
                                                        specified.
                                                      type: number
                                                    batchPercentage:
                                                      description: ':  Percentage
                                                        of the bool pool nodes to
                                                        drain in a batch. The range
                                                        of this field should be (0.0,
                                                        1.0). Only one of the batch_percentage
                                                        or batch_node_count can be
                                                        specified.'
                                                      type: number
                                                    batchSoakDuration:
                                                      description: 'Soak time after
                                                        each batch gets drained. A
                                                        duration in seconds with up
                                                        to nine fractional digits,
                                                        ending with ''s''. Example:
                                                        "3.5s".`.'
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                        maxSurge:
                                          description: The maximum number of nodes
                                            that can be created beyond the current
                                            size of the node pool during the upgrade
                                            process. To be used when strategy is set
                                            to SURGE. Default is 0.
                                          type: number
                                        maxUnavailable:
                                          description: The maximum number of nodes
                                            that can be simultaneously unavailable
                                            during the upgrade process. To be used
                                            when strategy is set to SURGE. Default
                                            is 0.
                                          type: number
                                        strategy:
                                          description: Strategy used for node pool
                                            update. Strategy can only be one of BLUE_GREEN
                                            or SURGE. The default is value is SURGE.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            enabled:
                              description: Whether node auto-provisioning is enabled.
                                Must be supplied for GKE Standard clusters, true is
                                implied for autopilot clusters. Resource limits for
                                cpu and memory must be defined to enable node auto-provisioning
                                for GKE Standard.
                              type: boolean
                            resourceLimits:
                              description: Global constraints for machine resources
                                in the cluster. Configuring the cpu and memory types
                                is required if node auto-provisioning is enabled.
                                These limits will apply to node pool autoscaling in
                                addition to node auto-provisioning. Structure is documented
                                below.
                              items:
                                properties:
                                  maximum:
                                    description: Maximum amount of the resource in
                                      the cluster.
                                    type: number
                                  minimum:
                                    description: Minimum amount of the resource in
                                      the cluster.
                                    type: number
                                  resourceType:
                                    description: The type of the resource. For example,
                                      cpu and memory.  See the guide to using Node
                                      Auto-Provisioning for a list of types.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      clusterIpv4Cidr:
                        description: The IP address range of the Kubernetes pods in
                          this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave
                          blank to have one automatically chosen or specify a /14
                          block in 10.0.0.0/8. This field will only work for routes-based
                          clusters, where ip_allocation_policy is not defined.
                        type: string
                      confidentialNodes:
                        description: Configuration for Confidential Nodes feature.
                          Structure is documented below documented below.
                        items:
                          properties:
                            enabled:
                              description: Enable Confidential Nodes for this cluster.
                              type: boolean
                          type: object
                        type: array
                      costManagementConfig:
                        description: Configuration for the Cost Allocation feature.
                          Structure is documented below.
                        items:
                          properties:
                            enabled:
                              description: Whether to enable the cost allocation feature.
                              type: boolean
                          type: object
                        type: array
                      databaseEncryption:
                        description: Structure is documented below.
                        items:
                          properties:
                            keyName:
                              description: the key to use to encrypt/decrypt secrets.  See
                                the DatabaseEncryption definition for more information.
                              type: string
                            state:
                              description: ENCRYPTED or DECRYPTED
                              type: string
                          type: object
                        type: array
                      datapathProvider:
                        description: The desired datapath provider for this cluster.
                          This is set to LEGACY_DATAPATH by default, which uses the
                          IPTables-based kube-proxy implementation. Set to ADVANCED_DATAPATH
                          to enable Dataplane v2.
                        type: string
                      defaultMaxPodsPerNode:
                        description: The default maximum number of pods per node in
                          this cluster. This doesn't work on "routes-based" clusters,
                          clusters that don't have IP Aliasing enabled. See the official
                          documentation for more information.
                        type: number
                      defaultSnatStatus:
                        description: GKE SNAT DefaultSnatStatus contains the desired
                          state of whether default sNAT should be disabled on the
                          cluster, API doc. Structure is documented below
                        items:
                          properties:
                            disabled:
                              description: Whether the cluster disables default in-node
                                sNAT rules. In-node sNAT rules will be disabled when
                                defaultSnatStatus is disabled.When disabled is set
                                to false, default IP masquerade rules will be applied
                                to the nodes to prevent sNAT on cluster internal traffic
                              type: boolean
                          type: object
                        type: array
                      description:
                        description: Description of the cluster.
                        type: string
                      dnsConfig:
                        description: Configuration for Using Cloud DNS for GKE. Structure
                          is documented below.
                        items:
                          properties:
                            clusterDns:
                              description: Which in-cluster DNS provider should be
                                used. PROVIDER_UNSPECIFIED (default) or PLATFORM_DEFAULT
                                or CLOUD_DNS.
                              type: string
                            clusterDnsDomain:
                              description: The suffix used for all cluster service
                                records.
                              type: string
                            clusterDnsScope:
                              description: The scope of access to cluster DNS records.
                                DNS_SCOPE_UNSPECIFIED (default) or CLUSTER_SCOPE or
                                VPC_SCOPE.
                              type: string
                          type: object
                        type: array
                      enableAutopilot:
                        description: Enable Autopilot for this cluster. Defaults to
                          false. Note that when this option is enabled, certain features
                          of Standard GKE are not available. See the official documentation
                          for available features.
                        type: boolean
                      enableBinaryAuthorization:
                        description: (DEPRECATED) Enable Binary Authorization for
                          this cluster. If enabled, all container images will be validated
                          by Google Binary Authorization. Deprecated in favor of binary_authorization.
                        type: boolean
                      enableIntranodeVisibility:
                        description: Whether Intra-node visibility is enabled for
                          this cluster. This makes same node pod to pod traffic visible
                          for VPC network.
                        type: boolean
                      enableK8SBetaApis:
                        description: Configuration for Kubernetes Beta APIs. Structure
                          is documented below.
                        items:
                          properties:
                            enabledApis:
                              description: Enabled Kubernetes Beta APIs. To list a
                                Beta API resource, use the representation {group}/{version}/{resource}.
                                The version must be a Beta version. Note that you
                                cannot disable beta APIs that are already enabled
                                on a cluster without recreating it. See the Configure
                                beta APIs for more information.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      enableKubernetesAlpha:
                        description: Whether to enable Kubernetes Alpha features for
                          this cluster. Note that when this option is enabled, the
                          cluster cannot be upgraded and will be automatically deleted
                          after 30 days.
                        type: boolean
                      enableL4IlbSubsetting:
                        description: Whether L4ILB Subsetting is enabled for this
                          cluster.
                        type: boolean
                      enableLegacyAbac:
                        description: Whether the ABAC authorizer is enabled for this
                          cluster. When enabled, identities in the system, including
                          service accounts, nodes, and controllers, will have statically
                          granted permissions beyond those provided by the RBAC configuration
                          or IAM. Defaults to false
                        type: boolean
                      enableShieldedNodes:
                        description: Enable Shielded Nodes features on all nodes in
                          this cluster.  Defaults to true.
                        type: boolean
                      enableTpu:
                        description: Whether to enable Cloud TPU resources in this
                          cluster. See the official documentation.
                        type: boolean
                      endpoint:
                        description: The IP address of this cluster's Kubernetes master.
                        type: string
                      gatewayApiConfig:
                        description: Configuration for GKE Gateway API controller.
                          Structure is documented below.
                        items:
                          properties:
                            channel:
                              description: Which Gateway Api channel should be used.
                                CHANNEL_DISABLED, CHANNEL_EXPERIMENTAL or CHANNEL_STANDARD.
                              type: string
                          type: object
                        type: array
                      id:
                        description: an identifier for the resource with format projects/{{project}}/locations/{{zone}}/clusters/{{name}}
                        type: string
                      initialNodeCount:
                        description: The number of nodes to create in this cluster's
                          default node pool. In regional or multi-zonal clusters,
                          this is the number of nodes per zone. Must be set if node_pool
                          is not set. If you're using google_container_node_pool objects
                          with no default node pool, you'll need to set this to a
                          value of at least 1, alongside setting remove_default_node_pool
                          to true.
                        type: number
                      ipAllocationPolicy:
                        description: Configuration of cluster IP allocation for VPC-native
                          clusters. Adding this block enables IP aliasing, making
                          the cluster VPC-native instead of routes-based. Structure
                          is documented below.
                        items:
                          properties:
                            clusterIpv4CidrBlock:
                              description: The IP address range for the cluster pod
                                IPs. Set to blank to have a range chosen with the
                                default size. Set to /netmask (e.g. /14) to have a
                                range chosen with a specific netmask. Set to a CIDR
                                notation (e.g. 10.96.0.0/14) from the RFC-1918 private
                                networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16)
                                to pick a specific range to use.
                              type: string
                            clusterSecondaryRangeName:
                              description: The name of the existing secondary range
                                in the cluster's subnetwork to use for pod IP addresses.
                                Alternatively, cluster_ipv4_cidr_block can be used
                                to automatically create a GKE-managed one.
                              type: string
                            podCidrOverprovisionConfig:
                              items:
                                properties:
                                  disabled:
                                    description: The status of the Istio addon, which
                                      makes it easy to set up Istio for services in
                                      a cluster. It is disabled by default. Set disabled
                                      = false to enable.
                                    type: boolean
                                type: object
                              type: array
                            servicesIpv4CidrBlock:
                              description: The IP address range of the services IPs
                                in this cluster. Set to blank to have a range chosen
                                with the default size. Set to /netmask (e.g. /14)
                                to have a range chosen with a specific netmask. Set
                                to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918
                                private networks (e.g. 10.0.0.0/8, 172.16.0.0/12,
                                192.168.0.0/16) to pick a specific range to use.
                              type: string
                            servicesSecondaryRangeName:
                              description: The name of the existing secondary range
                                in the cluster's subnetwork to use for service ClusterIPs.
                                Alternatively, services_ipv4_cidr_block can be used
                                to automatically create a GKE-managed one.
                              type: string
                            stackType:
                              description: The IP Stack Type of the cluster. Default
                                value is IPV4. Possible values are IPV4 and IPV4_IPV6.
                              type: string
                          type: object
                        type: array
                      labelFingerprint:
                        description: The fingerprint of the set of labels for this
                          cluster.
                        type: string
                      location:
                        description: The location (region or zone) in which the cluster
                          master will be created, as well as the default node location.
                          If you specify a zone (such as us-central1-a), the cluster
                          will be a zonal cluster with a single cluster master. If
                          you specify a region (such as us-west1), the cluster will
                          be a regional cluster with multiple masters spread across
                          zones in the region, and with default node locations in
                          those zones as well
                        type: string
                      loggingConfig:
                        description: Logging configuration for the cluster. Structure
                          is documented below.
                        items:
                          properties:
                            enableComponents:
                              description: 'The GKE components exposing logs. Supported
                                values include: SYSTEM_COMPONENTS, APISERVER, CONTROLLER_MANAGER,
                                SCHEDULER, and WORKLOADS.'
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      loggingService:
                        description: The logging service that the cluster should write
                          logs to. Available options include logging.googleapis.com(Legacy
                          Stackdriver), logging.googleapis.com/kubernetes(Stackdriver
                          Kubernetes Engine Logging), and none. Defaults to logging.googleapis.com/kubernetes
                        type: string
                      maintenancePolicy:
                        description: The maintenance policy to use for the cluster.
                          Structure is documented below.
                        items:
                          properties:
                            dailyMaintenanceWindow:
                              description: structure documented below.
                              items:
                                properties:
                                  duration:
                                    description: Duration of the time window, automatically
                                      chosen to be smallest possible in the given
                                      scenario. Duration will be in RFC3339 format
                                      "PTnHnMnS".
                                    type: string
                                  startTime:
                                    type: string
                                type: object
                              type: array
                            maintenanceExclusion:
                              description: structure documented below
                              items:
                                properties:
                                  endTime:
                                    type: string
                                  exclusionName:
                                    description: The name of the cluster, unique within
                                      the project and location.
                                    type: string
                                  exclusionOptions:
                                    description: MaintenanceExclusionOptions provides
                                      maintenance exclusion related options.
                                    items:
                                      properties:
                                        scope:
                                          description: 'The scope of automatic upgrades
                                            to restrict in the exclusion window. One
                                            of: NO_UPGRADES | NO_MINOR_UPGRADES |
                                            NO_MINOR_OR_NODE_UPGRADES'
                                          type: string
                                      type: object
                                    type: array
                                  startTime:
                                    type: string
                                type: object
                              type: array
                            recurringWindow:
                              description: structure documented below
                              items:
                                properties:
                                  endTime:
                                    type: string
                                  recurrence:
                                    type: string
                                  startTime:
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      masterAuth:
                        description: The authentication information for accessing
                          the Kubernetes master. Some values in this block are only
                          returned by the API if your service account has permission
                          to get credentials for your GKE cluster. If you see an unexpected
                          diff unsetting your client cert, ensure you have the container.clusters.getCredentials
                          permission. Structure is documented below.
                        items:
                          properties:
                            clientCertificate:
                              description: Base64 encoded public certificate used
                                by clients to authenticate to the cluster endpoint.
                              type: string
                            clientCertificateConfig:
                              description: 'Whether client certificate authorization
                                is enabled for this cluster.  For example:'
                              items:
                                properties:
                                  issueClientCertificate:
                                    type: boolean
                                type: object
                              type: array
                            clusterCaCertificate:
                              description: Base64 encoded public certificate that
                                is the root certificate of the cluster.
                              type: string
                          type: object
                        type: array
                      masterAuthorizedNetworksConfig:
                        description: The desired configuration options for master
                          authorized networks. Omit the nested cidr_blocks attribute
                          to disallow external access (except the cluster node IPs,
                          which GKE automatically whitelists). Structure is documented
                          below.
                        items:
                          properties:
                            cidrBlocks:
                              description: External networks that can access the Kubernetes
                                cluster master through HTTPS.
                              items:
                                properties:
                                  cidrBlock:
                                    description: External network that can access
                                      Kubernetes master through HTTPS. Must be specified
                                      in CIDR notation.
                                    type: string
                                  displayName:
                                    description: Field for users to identify CIDR
                                      blocks.
                                    type: string
                                type: object
                              type: array
                            gcpPublicCidrsAccessEnabled:
                              description: Whether Kubernetes master is accessible
                                via Google Compute Engine Public IPs.
                              type: boolean
                          type: object
                        type: array
                      masterVersion:
                        description: The current version of the master in the cluster.
                          This may be different than the min_master_version set in
                          the config if the master has been updated by GKE.
                        type: string
                      meshCertificates:
                        description: Structure is documented below.
                        items:
                          properties:
                            enableCertificates:
                              description: Controls the issuance of workload mTLS
                                certificates. It is enabled by default. Workload Identity
                                is required, see workload_config.
                              type: boolean
                          type: object
                        type: array
                      minMasterVersion:
                        description: The minimum version of the master. GKE will auto-update
                          the master to new versions, so this does not guarantee the
                          current master version--use the read-only master_version
                          field to obtain that. If unset, the cluster's version will
                          be set by GKE to the version of the most recent official
                          release (which is not necessarily the latest version). If
                          you intend to specify versions manually, the docs describe
                          the various acceptable formats for this field.
                        type: string
                      monitoringConfig:
                        description: Monitoring configuration for the cluster. Structure
                          is documented below.
                        items:
                          properties:
                            enableComponents:
                              description: 'The GKE components exposing metrics. Supported
                                values include: SYSTEM_COMPONENTS, APISERVER, CONTROLLER_MANAGER,
                                and SCHEDULER. In beta provider, WORKLOADS is supported
                                on top of those 4 values. (WORKLOADS is deprecated
                                and removed in GKE 1.24.)'
                              items:
                                type: string
                              type: array
                            managedPrometheus:
                              description: Configuration for Managed Service for Prometheus.
                                Structure is documented below.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                          type: object
                        type: array
                      monitoringService:
                        description: The monitoring service that the cluster should
                          write metrics to. Automatically send metrics from pods in
                          the cluster to the Google Cloud Monitoring API. VM metrics
                          will be collected by Google Compute Engine regardless of
                          this setting Available options include monitoring.googleapis.com(Legacy
                          Stackdriver), monitoring.googleapis.com/kubernetes(Stackdriver
                          Kubernetes Engine Monitoring), and none. Defaults to monitoring.googleapis.com/kubernetes
                        type: string
                      network:
                        description: The name or self_link of the Google Compute Engine
                          network to which the cluster is connected. For Shared VPC,
                          set this to the self link of the shared network.
                        type: string
                      networkPolicy:
                        description: Configuration options for the NetworkPolicy feature.
                          Structure is documented below.
                        items:
                          properties:
                            enabled:
                              description: Whether network policy is enabled on the
                                cluster.
                              type: boolean
                            provider:
                              description: The selected network policy provider. Defaults
                                to PROVIDER_UNSPECIFIED.
                              type: string
                          type: object
                        type: array
                      networkingMode:
                        description: Determines whether alias IPs or routes will be
                          used for pod IPs in the cluster. Options are VPC_NATIVE
                          or ROUTES. VPC_NATIVE enables IP aliasing, and requires
                          the ip_allocation_policy block to be defined. By default,
                          when this field is unspecified and no ip_allocation_policy
                          blocks are set, GKE will create a ROUTES-based cluster.
                        type: string
                      nodeConfig:
                        description: Parameters used in creating the default node
                          pool. Structure is documented below.
                        items:
                          properties:
                            advancedMachineFeatures:
                              description: Specifies options for controlling advanced
                                machine features. Structure is documented below.
                              items:
                                properties:
                                  threadsPerCore:
                                    description: The number of threads per physical
                                      core. To disable simultaneous multithreading
                                      (SMT) set this to 1. If unset, the maximum number
                                      of threads supported per core by the underlying
                                      processor is assumed.
                                    type: number
                                type: object
                              type: array
                            bootDiskKmsKey:
                              description: 'The Customer Managed Encryption Key used
                                to encrypt the boot disk attached to each node in
                                the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
                                For more information about protecting resources with
                                Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
                              type: string
                            diskSizeGb:
                              description: Size of the disk attached to each node,
                                specified in GB. The smallest allowed disk size is
                                10GB. Defaults to 100GB.
                              type: number
                            diskType:
                              description: Type of the disk attached to each node
                                (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If
                                unspecified, the default disk type is 'pd-standard'
                              type: string
                            ephemeralStorageLocalSsdConfig:
                              description: Parameters for the ephemeral storage filesystem.
                                If unspecified, ephemeral storage is backed by the
                                boot disk. Structure is documented below.
                              items:
                                properties:
                                  localSsdCount:
                                    description: The amount of local SSD disks that
                                      will be attached to each cluster node. Defaults
                                      to 0.
                                    type: number
                                type: object
                              type: array
                            gcfsConfig:
                              description: Parameters for the Google Container Filesystem
                                (GCFS). If unspecified, GCFS will not be enabled on
                                the node pool. When enabling this feature you must
                                specify image_type = "COS_CONTAINERD" and node_version
                                from GKE versions 1.19 or later to use it. For GKE
                                versions 1.19, 1.20, and 1.21, the recommended minimum
                                node_version would be 1.19.15-gke.1300, 1.20.11-gke.1300,
                                and 1.21.5-gke.1300 respectively. A machine_type that
                                has more than 16 GiB of memory is also recommended.
                                GCFS must be enabled in order to use image streaming.
                                Structure is documented below.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            guestAccelerator:
                              description: List of the type and count of accelerator
                                cards attached to the instance. Structure documented
                                below.12 this field is an Attribute as Block
                              items:
                                properties:
                                  count:
                                    description: The number of the guest accelerator
                                      cards exposed to this instance.
                                    type: number
                                  gpuDriverInstallationConfig:
                                    description: Configuration for auto installation
                                      of GPU driver. Structure is documented below.
                                    items:
                                      properties:
                                        gpuDriverVersion:
                                          description: 'Mode for how the GPU driver
                                            is installed. Accepted values are:'
                                          type: string
                                      type: object
                                    type: array
                                  gpuPartitionSize:
                                    description: Size of partitions to create on the
                                      GPU. Valid values are described in the NVIDIA
                                      mig user guide.
                                    type: string
                                  gpuSharingConfig:
                                    description: Configuration for GPU sharing. Structure
                                      is documented below.
                                    items:
                                      properties:
                                        gpuSharingStrategy:
                                          description: 'The type of GPU sharing strategy
                                            to enable on the GPU node. Accepted values
                                            are:'
                                          type: string
                                        maxSharedClientsPerGpu:
                                          description: The maximum number of containers
                                            that can share a GPU.
                                          type: number
                                      type: object
                                    type: array
                                  type:
                                    description: The accelerator type resource to
                                      expose to this instance. E.g. nvidia-tesla-k80.
                                    type: string
                                type: object
                              type: array
                            gvnic:
                              description: Google Virtual NIC (gVNIC) is a virtual
                                network interface. Installing the gVNIC driver allows
                                for more efficient traffic transmission across the
                                Google network infrastructure. gVNIC is an alternative
                                to the virtIO-based ethernet driver. GKE nodes must
                                use a Container-Optimized OS node image. GKE node
                                version 1.15.11-gke.15 or later Structure is documented
                                below.
                              items:
                                properties:
                                  enabled:
                                    description: Enables vertical pod autoscaling
                                    type: boolean
                                type: object
                              type: array
                            hostMaintenancePolicy:
                              description: The maintenance policy to use for the cluster.
                                Structure is documented below.
                              items:
                                properties:
                                  maintenanceInterval:
                                    type: string
                                type: object
                              type: array
                            imageType:
                              description: The image type to use for this node. Note
                                that changing the image type will delete and recreate
                                all nodes in the node pool.
                              type: string
                            kubeletConfig:
                              description: Kubelet configuration, currently supported
                                attributes can be found here. Structure is documented
                                below.
                              items:
                                properties:
                                  cpuCfsQuota:
                                    description: If true, enables CPU CFS quota enforcement
                                      for containers that specify CPU limits.
                                    type: boolean
                                  cpuCfsQuotaPeriod:
                                    description: The CPU CFS quota period value. Specified
                                      as a sequence of decimal numbers, each with
                                      optional fraction and a unit suffix, such as
                                      "300ms". Valid time units are "ns", "us" (or
                                      "µs"), "ms", "s", "m", "h". The value must be
                                      a positive duration.
                                    type: string
                                  cpuManagerPolicy:
                                    description: The CPU management policy on the
                                      node. See K8S CPU Management Policies. One of
                                      "none" or "static". Defaults to none when kubelet_config
                                      is unset.
                                    type: string
                                  podPidsLimit:
                                    description: Controls the maximum number of processes
                                      allowed to run in a pod. The value must be greater
                                      than or equal to 1024 and less than 4194304.
                                    type: number
                                type: object
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              description: The Kubernetes labels (key/value pairs)
                                to be applied to each node. The kubernetes.io/ and
                                k8s.io/ prefixes are reserved by Kubernetes Core components
                                and cannot be specified.
                              type: object
                            linuxNodeConfig:
                              description: Linux node configuration, currently supported
                                attributes can be found here. Note that validations
                                happen all server side. All attributes are optional.
                                Structure is documented below.
                              items:
                                properties:
                                  sysctls:
                                    additionalProperties:
                                      type: string
                                    description: The Linux kernel parameters to be
                                      applied to the nodes and all pods running on
                                      the nodes. Specified as a map from the key,
                                      such as net.core.wmem_max, to a string value.
                                    type: object
                                type: object
                              type: array
                            localNvmeSsdBlockConfig:
                              description: Parameters for the local NVMe SSDs. Structure
                                is documented below.
                              items:
                                properties:
                                  localSsdCount:
                                    description: The amount of local SSD disks that
                                      will be attached to each cluster node. Defaults
                                      to 0.
                                    type: number
                                type: object
                              type: array
                            localSsdCount:
                              description: The amount of local SSD disks that will
                                be attached to each cluster node. Defaults to 0.
                              type: number
                            loggingVariant:
                              description: wide default value. Valid values include
                                DEFAULT and MAX_THROUGHPUT. See Increasing logging
                                agent throughput for more information.
                              type: string
                            machineType:
                              description: The name of a Google Compute Engine machine
                                type. Defaults to e2-medium. To create a custom machine
                                type, value should be set as specified here.
                              type: string
                            metadata:
                              additionalProperties:
                                type: string
                              description: The metadata key/value pairs assigned to
                                instances in the cluster. From GKE 1. To avoid this,
                                set the value in your config.
                              type: object
                            minCpuPlatform:
                              description: Minimum CPU platform to be used by this
                                instance. The instance may be scheduled on the specified
                                or newer CPU platform. Applicable values are the friendly
                                names of CPU platforms, such as Intel Haswell. See
                                the official documentation for more information.
                              type: string
                            nodeGroup:
                              description: Setting this field will assign instances
                                of this pool to run on the specified node group. This
                                is useful for running workloads on sole tenant nodes.
                              type: string
                            oauthScopes:
                              description: The set of Google API scopes to be made
                                available on all of the node VMs under the "default"
                                service account. Use the "https://www.googleapis.com/auth/cloud-platform"
                                scope to grant access to all APIs. It is recommended
                                that you set service_account to a non-default service
                                account and grant IAM roles to that service account
                                for only the resources that it needs.
                              items:
                                type: string
                              type: array
                            preemptible:
                              description: A boolean that represents whether or not
                                the underlying node VMs are preemptible. See the official
                                documentation for more information. Defaults to false.
                              type: boolean
                            reservationAffinity:
                              description: The configuration of the desired reservation
                                which instances could take capacity from. Structure
                                is documented below.
                              items:
                                properties:
                                  consumeReservationType:
                                    description: 'The type of reservation consumption
                                      Accepted values are:'
                                    type: string
                                  key:
                                    description: Key for taint.
                                    type: string
                                  values:
                                    description: name"
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type: array
                            resourceLabels:
                              additionalProperties:
                                type: string
                              description: The GCP labels (key/value pairs) to be
                                applied to each node. Refer here for how these labels
                                are applied to clusters, node pools and nodes.
                              type: object
                            serviceAccount:
                              description: The service account to be used by the Node
                                VMs. If not specified, the "default" service account
                                is used.
                              type: string
                            shieldedInstanceConfig:
                              description: Shielded Instance options. Structure is
                                documented below.
                              items:
                                properties:
                                  enableIntegrityMonitoring:
                                    description: Defines if the instance has integrity
                                      monitoring enabled.
                                    type: boolean
                                  enableSecureBoot:
                                    description: Defines if the instance has Secure
                                      Boot enabled.
                                    type: boolean
                                type: object
                              type: array
                            soleTenantConfig:
                              description: Allows specifying multiple node affinities
                                useful for running workloads on sole tenant nodes.
                                node_affinity structure is documented below.
                              items:
                                properties:
                                  nodeAffinity:
                                    items:
                                      properties:
                                        key:
                                          description: Key for taint.
                                          type: string
                                        operator:
                                          description: Specifies affinity or anti-affinity.
                                            Accepted values are "IN" or "NOT_IN"
                                          type: string
                                        values:
                                          description: name"
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                            spot:
                              description: A boolean that represents whether the underlying
                                node VMs are spot. See the official documentation
                                for more information. Defaults to false.
                              type: boolean
                            tags:
                              description: The list of instance tags applied to all
                                nodes. Tags are used to identify valid sources or
                                targets for network firewalls.
                              items:
                                type: string
                              type: array
                            taint:
                              description: A list of Kubernetes taints to apply to
                                nodes. GKE's API can only set this field on cluster
                                creation. However, GKE will add taints to your nodes
                                if you enable certain features such as GPUs. Taint
                                values can be updated safely in Kubernetes (eg. through
                                kubectl), and it's recommended that you do not use
                                this field to manage taints. If you do, lifecycle.ignore_changes
                                is recommended. Structure is documented below.
                              items:
                                properties:
                                  effect:
                                    description: Effect for taint. Accepted values
                                      are NO_SCHEDULE, PREFER_NO_SCHEDULE, and NO_EXECUTE.
                                    type: string
                                  key:
                                    description: Key for taint.
                                    type: string
                                  value:
                                    description: Value for taint.
                                    type: string
                                type: object
                              type: array
                            workloadMetadataConfig:
                              description: Metadata configuration to expose to workloads
                                on the node pool. Structure is documented below.
                              items:
                                properties:
                                  mode:
                                    description: 'How to expose the node metadata
                                      to the workload running on the node. Accepted
                                      values are:'
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      nodeLocations:
                        description: The list of zones in which the cluster's nodes
                          are located. Nodes must be in the region of their regional
                          cluster or in the same region as their cluster's zone for
                          zonal clusters. If this is specified for a zonal cluster,
                          omit the cluster's zone.
                        items:
                          type: string
                        type: array
                      nodePool:
                        description: 'List of node pools associated with this cluster.
                          See google_container_node_pool for schema. Warning: node
                          pools defined inside a cluster can''t be changed (or added/removed)
                          after cluster creation without deleting and recreating the
                          entire cluster. Unless you absolutely need the ability to
                          say "these are the only node pools associated with this
                          cluster", use the google_container_node_pool resource instead
                          of this property.'
                        items:
                          properties:
                            autoscaling:
                              items:
                                properties:
                                  locationPolicy:
                                    type: string
                                  maxNodeCount:
                                    type: number
                                  minNodeCount:
                                    type: number
                                  totalMaxNodeCount:
                                    type: number
                                  totalMinNodeCount:
                                    type: number
                                type: object
                              type: array
                            initialNodeCount:
                              description: The number of nodes to create in this cluster's
                                default node pool. In regional or multi-zonal clusters,
                                this is the number of nodes per zone. Must be set
                                if node_pool is not set. If you're using google_container_node_pool
                                objects with no default node pool, you'll need to
                                set this to a value of at least 1, alongside setting
                                remove_default_node_pool to true.
                              type: number
                            instanceGroupUrls:
                              items:
                                type: string
                              type: array
                            managedInstanceGroupUrls:
                              items:
                                type: string
                              type: array
                            management:
                              description: NodeManagement configuration for this NodePool.
                                Structure is documented below.
                              items:
                                properties:
                                  autoRepair:
                                    description: Specifies whether the node auto-repair
                                      is enabled for the node pool. If enabled, the
                                      nodes in this node pool will be monitored and,
                                      if they fail health checks too many times, an
                                      automatic repair action will be triggered.
                                    type: boolean
                                  autoUpgrade:
                                    description: Specifies whether node auto-upgrade
                                      is enabled for the node pool. If enabled, node
                                      auto-upgrade helps keep the nodes in your node
                                      pool up to date with the latest release version
                                      of Kubernetes.
                                    type: boolean
                                type: object
                              type: array
                            maxPodsPerNode:
                              type: number
                            name:
                              description: The name of the cluster, unique within
                                the project and location.
                              type: string
                            namePrefix:
                              type: string
                            networkConfig:
                              items:
                                properties:
                                  createPodRange:
                                    type: boolean
                                  enablePrivateNodes:
                                    description: Enables the private cluster feature,
                                      creating a private endpoint on the cluster.
                                      In a private cluster, nodes only have RFC 1918
                                      private addresses and communicate with the master's
                                      private endpoint via private networking.
                                    type: boolean
                                  podCidrOverprovisionConfig:
                                    items:
                                      properties:
                                        disabled:
                                          description: The status of the Istio addon,
                                            which makes it easy to set up Istio for
                                            services in a cluster. It is disabled
                                            by default. Set disabled = false to enable.
                                          type: boolean
                                      type: object
                                    type: array
                                  podIpv4CidrBlock:
                                    type: string
                                  podRange:
                                    type: string
                                type: object
                              type: array
                            nodeConfig:
                              description: Parameters used in creating the default
                                node pool. Structure is documented below.
                              items:
                                properties:
                                  advancedMachineFeatures:
                                    description: Specifies options for controlling
                                      advanced machine features. Structure is documented
                                      below.
                                    items:
                                      properties:
                                        threadsPerCore:
                                          description: The number of threads per physical
                                            core. To disable simultaneous multithreading
                                            (SMT) set this to 1. If unset, the maximum
                                            number of threads supported per core by
                                            the underlying processor is assumed.
                                          type: number
                                      type: object
                                    type: array
                                  bootDiskKmsKey:
                                    description: 'The Customer Managed Encryption
                                      Key used to encrypt the boot disk attached to
                                      each node in the node pool. This should be of
                                      the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
                                      For more information about protecting resources
                                      with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
                                    type: string
                                  diskSizeGb:
                                    description: Size of the disk attached to each
                                      node, specified in GB. The smallest allowed
                                      disk size is 10GB. Defaults to 100GB.
                                    type: number
                                  diskType:
                                    description: Type of the disk attached to each
                                      node (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd').
                                      If unspecified, the default disk type is 'pd-standard'
                                    type: string
                                  ephemeralStorageLocalSsdConfig:
                                    description: Parameters for the ephemeral storage
                                      filesystem. If unspecified, ephemeral storage
                                      is backed by the boot disk. Structure is documented
                                      below.
                                    items:
                                      properties:
                                        localSsdCount:
                                          description: The amount of local SSD disks
                                            that will be attached to each cluster
                                            node. Defaults to 0.
                                          type: number
                                      type: object
                                    type: array
                                  gcfsConfig:
                                    description: The default Google Container Filesystem
                                      (GCFS) configuration at the cluster level. e.g.
                                      enable image streaming across all the node pools
                                      within the cluster. Structure is documented
                                      below.
                                    items:
                                      properties:
                                        enabled:
                                          description: Enables vertical pod autoscaling
                                          type: boolean
                                      type: object
                                    type: array
                                  guestAccelerator:
                                    description: List of the type and count of accelerator
                                      cards attached to the instance. Structure documented
                                      below.12 this field is an Attribute as Block
                                    items:
                                      properties:
                                        count:
                                          description: The number of the guest accelerator
                                            cards exposed to this instance.
                                          type: number
                                        gpuDriverInstallationConfig:
                                          description: Configuration for auto installation
                                            of GPU driver. Structure is documented
                                            below.
                                          items:
                                            properties:
                                              gpuDriverVersion:
                                                description: 'Mode for how the GPU
                                                  driver is installed. Accepted values
                                                  are:'
                                                type: string
                                            type: object
                                          type: array
                                        gpuPartitionSize:
                                          description: Size of partitions to create
                                            on the GPU. Valid values are described
                                            in the NVIDIA mig user guide.
                                          type: string
                                        gpuSharingConfig:
                                          description: Configuration for GPU sharing.
                                            Structure is documented below.
                                          items:
                                            properties:
                                              gpuSharingStrategy:
                                                description: 'The type of GPU sharing
                                                  strategy to enable on the GPU node.
                                                  Accepted values are:'
                                                type: string
                                              maxSharedClientsPerGpu:
                                                description: The maximum number of
                                                  containers that can share a GPU.
                                                type: number
                                            type: object
                                          type: array
                                        type:
                                          description: The accelerator type resource
                                            to expose to this instance. E.g. nvidia-tesla-k80.
                                          type: string
                                      type: object
                                    type: array
                                  gvnic:
                                    description: Google Virtual NIC (gVNIC) is a virtual
                                      network interface. Installing the gVNIC driver
                                      allows for more efficient traffic transmission
                                      across the Google network infrastructure. gVNIC
                                      is an alternative to the virtIO-based ethernet
                                      driver. GKE nodes must use a Container-Optimized
                                      OS node image. GKE node version 1.15.11-gke.15
                                      or later Structure is documented below.
                                    items:
                                      properties:
                                        enabled:
                                          description: Enables vertical pod autoscaling
                                          type: boolean
                                      type: object
                                    type: array
                                  hostMaintenancePolicy:
                                    description: The maintenance policy to use for
                                      the cluster. Structure is documented below.
                                    items:
                                      properties:
                                        maintenanceInterval:
                                          type: string
                                      type: object
                                    type: array
                                  imageType:
                                    description: The image type to use for this node.
                                      Note that changing the image type will delete
                                      and recreate all nodes in the node pool.
                                    type: string
                                  kubeletConfig:
                                    description: Kubelet configuration, currently
                                      supported attributes can be found here. Structure
                                      is documented below.
                                    items:
                                      properties:
                                        cpuCfsQuota:
                                          description: If true, enables CPU CFS quota
                                            enforcement for containers that specify
                                            CPU limits.
                                          type: boolean
                                        cpuCfsQuotaPeriod:
                                          description: The CPU CFS quota period value.
                                            Specified as a sequence of decimal numbers,
                                            each with optional fraction and a unit
                                            suffix, such as "300ms". Valid time units
                                            are "ns", "us" (or "µs"), "ms", "s", "m",
                                            "h". The value must be a positive duration.
                                          type: string
                                        cpuManagerPolicy:
                                          description: The CPU management policy on
                                            the node. See K8S CPU Management Policies.
                                            One of "none" or "static". Defaults to
                                            none when kubelet_config is unset.
                                          type: string
                                        podPidsLimit:
                                          description: Controls the maximum number
                                            of processes allowed to run in a pod.
                                            The value must be greater than or equal
                                            to 1024 and less than 4194304.
                                          type: number
                                      type: object
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The Kubernetes labels (key/value
                                      pairs) to be applied to each node. The kubernetes.io/
                                      and k8s.io/ prefixes are reserved by Kubernetes
                                      Core components and cannot be specified.
                                    type: object
                                  linuxNodeConfig:
                                    description: Linux node configuration, currently
                                      supported attributes can be found here. Note
                                      that validations happen all server side. All
                                      attributes are optional. Structure is documented
                                      below.
                                    items:
                                      properties:
                                        sysctls:
                                          additionalProperties:
                                            type: string
                                          description: The Linux kernel parameters
                                            to be applied to the nodes and all pods
                                            running on the nodes. Specified as a map
                                            from the key, such as net.core.wmem_max,
                                            to a string value.
                                          type: object
                                      type: object
                                    type: array
                                  localNvmeSsdBlockConfig:
                                    description: Parameters for the local NVMe SSDs.
                                      Structure is documented below.
                                    items:
                                      properties:
                                        localSsdCount:
                                          description: The amount of local SSD disks
                                            that will be attached to each cluster
                                            node. Defaults to 0.
                                          type: number
                                      type: object
                                    type: array
                                  localSsdCount:
                                    description: The amount of local SSD disks that
                                      will be attached to each cluster node. Defaults
                                      to 0.
                                    type: number
                                  loggingVariant:
                                    description: The type of logging agent that is
                                      deployed by default for newly created node pools
                                      in the cluster. Valid values include DEFAULT
                                      and MAX_THROUGHPUT. See Increasing logging agent
                                      throughput for more information.
                                    type: string
                                  machineType:
                                    description: The name of a Google Compute Engine
                                      machine type. Defaults to e2-medium. To create
                                      a custom machine type, value should be set as
                                      specified here.
                                    type: string
                                  metadata:
                                    additionalProperties:
                                      type: string
                                    description: The metadata key/value pairs assigned
                                      to instances in the cluster. From GKE 1. To
                                      avoid this, set the value in your config.
                                    type: object
                                  minCpuPlatform:
                                    description: Minimum CPU platform to be used by
                                      this instance. The instance may be scheduled
                                      on the specified or newer CPU platform. Applicable
                                      values are the friendly names of CPU platforms,
                                      such as Intel Haswell. See the official documentation
                                      for more information.
                                    type: string
                                  nodeGroup:
                                    description: Setting this field will assign instances
                                      of this pool to run on the specified node group.
                                      This is useful for running workloads on sole
                                      tenant nodes.
                                    type: string
                                  oauthScopes:
                                    description: The set of Google API scopes to be
                                      made available on all of the node VMs under
                                      the "default" service account. Use the "https://www.googleapis.com/auth/cloud-platform"
                                      scope to grant access to all APIs. It is recommended
                                      that you set service_account to a non-default
                                      service account and grant IAM roles to that
                                      service account for only the resources that
                                      it needs.
                                    items:
                                      type: string
                                    type: array
                                  preemptible:
                                    description: A boolean that represents whether
                                      or not the underlying node VMs are preemptible.
                                      See the official documentation for more information.
                                      Defaults to false.
                                    type: boolean
                                  reservationAffinity:
                                    description: The configuration of the desired
                                      reservation which instances could take capacity
                                      from. Structure is documented below.
                                    items:
                                      properties:
                                        consumeReservationType:
                                          description: 'The type of reservation consumption
                                            Accepted values are:'
                                          type: string
                                        key:
                                          description: Key for taint.
                                          type: string
                                        values:
                                          description: name"
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  resourceLabels:
                                    additionalProperties:
                                      type: string
                                    description: The GCE resource labels (a map of
                                      key/value pairs) to be applied to the cluster.
                                    type: object
                                  serviceAccount:
                                    description: The service account to be used by
                                      the Node VMs. If not specified, the "default"
                                      service account is used.
                                    type: string
                                  shieldedInstanceConfig:
                                    description: Shielded Instance options. Structure
                                      is documented below.
                                    items:
                                      properties:
                                        enableIntegrityMonitoring:
                                          description: Defines if the instance has
                                            integrity monitoring enabled.
                                          type: boolean
                                        enableSecureBoot:
                                          description: Defines if the instance has
                                            Secure Boot enabled.
                                          type: boolean
                                      type: object
                                    type: array
                                  soleTenantConfig:
                                    description: Allows specifying multiple node affinities
                                      useful for running workloads on sole tenant
                                      nodes. node_affinity structure is documented
                                      below.
                                    items:
                                      properties:
                                        nodeAffinity:
                                          items:
                                            properties:
                                              key:
                                                description: Key for taint.
                                                type: string
                                              operator:
                                                description: Specifies affinity or
                                                  anti-affinity. Accepted values are
                                                  "IN" or "NOT_IN"
                                                type: string
                                              values:
                                                description: name"
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  spot:
                                    description: A boolean that represents whether
                                      the underlying node VMs are spot. See the official
                                      documentation for more information. Defaults
                                      to false.
                                    type: boolean
                                  tags:
                                    description: List of network tags applied to auto-provisioned
                                      node pools.
                                    items:
                                      type: string
                                    type: array
                                  taint:
                                    description: A list of Kubernetes taints to apply
                                      to nodes. GKE's API can only set this field
                                      on cluster creation. However, GKE will add taints
                                      to your nodes if you enable certain features
                                      such as GPUs. Taint values can be updated safely
                                      in Kubernetes (eg. through kubectl), and it's
                                      recommended that you do not use this field to
                                      manage taints. If you do, lifecycle.ignore_changes
                                      is recommended. Structure is documented below.
                                    items:
                                      properties:
                                        effect:
                                          description: Effect for taint. Accepted
                                            values are NO_SCHEDULE, PREFER_NO_SCHEDULE,
                                            and NO_EXECUTE.
                                          type: string
                                        key:
                                          description: Key for taint.
                                          type: string
                                        value:
                                          description: Value for taint.
                                          type: string
                                      type: object
                                    type: array
                                  workloadMetadataConfig:
                                    description: Metadata configuration to expose
                                      to workloads on the node pool. Structure is
                                      documented below.
                                    items:
                                      properties:
                                        mode:
                                          description: 'How to expose the node metadata
                                            to the workload running on the node. Accepted
                                            values are:'
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            nodeCount:
                              type: number
                            nodeLocations:
                              description: The list of zones in which the cluster's
                                nodes are located. Nodes must be in the region of
                                their regional cluster or in the same region as their
                                cluster's zone for zonal clusters. If this is specified
                                for a zonal cluster, omit the cluster's zone.
                              items:
                                type: string
                              type: array
                            placementPolicy:
                              items:
                                properties:
                                  policyName:
                                    description: The name of the cluster, unique within
                                      the project and location.
                                    type: string
                                  type:
                                    description: The accelerator type resource to
                                      expose to this instance. E.g. nvidia-tesla-k80.
                                    type: string
                                type: object
                              type: array
                            upgradeSettings:
                              description: Specifies the upgrade settings for NAP
                                created node pools. Structure is documented below.
                              items:
                                properties:
                                  blueGreenSettings:
                                    description: Settings for blue-green upgrade strategy.
                                      To be specified when strategy is set to BLUE_GREEN.
                                      Structure is documented below.
                                    items:
                                      properties:
                                        nodePoolSoakDuration:
                                          description: 'Time needed after draining
                                            entire blue pool. After this period, blue
                                            pool will be cleaned up. A duration in
                                            seconds with up to nine fractional digits,
                                            ending with ''s''. Example: "3.5s".'
                                          type: string
                                        standardRolloutPolicy:
                                          description: green upgrade. To be specified
                                            when strategy is set to BLUE_GREEN. Structure
                                            is documented below.
                                          items:
                                            properties:
                                              batchNodeCount:
                                                description: Number of blue nodes
                                                  to drain in a batch. Only one of
                                                  the batch_percentage or batch_node_count
                                                  can be specified.
                                                type: number
                                              batchPercentage:
                                                description: ':  Percentage of the
                                                  bool pool nodes to drain in a batch.
                                                  The range of this field should be
                                                  (0.0, 1.0). Only one of the batch_percentage
                                                  or batch_node_count can be specified.'
                                                type: number
                                              batchSoakDuration:
                                                description: 'Soak time after each
                                                  batch gets drained. A duration in
                                                  seconds with up to nine fractional
                                                  digits, ending with ''s''. Example:
                                                  "3.5s".`.'
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  maxSurge:
                                    description: The maximum number of nodes that
                                      can be created beyond the current size of the
                                      node pool during the upgrade process. To be
                                      used when strategy is set to SURGE. Default
                                      is 0.
                                    type: number
                                  maxUnavailable:
                                    description: The maximum number of nodes that
                                      can be simultaneously unavailable during the
                                      upgrade process. To be used when strategy is
                                      set to SURGE. Default is 0.
                                    type: number
                                  strategy:
                                    description: Strategy used for node pool update.
                                      Strategy can only be one of BLUE_GREEN or SURGE.
                                      The default is value is SURGE.
                                    type: string
                                type: object
                              type: array
                            version:
                              type: string
                          type: object
                        type: array
                      nodePoolDefaults:
                        description: Default NodePool settings for the entire cluster.
                          These settings are overridden if specified on the specific
                          NodePool object. Structure is documented below.
                        items:
                          properties:
                            nodeConfigDefaults:
                              description: Subset of NodeConfig message that has defaults.
                              items:
                                properties:
                                  loggingVariant:
                                    description: The type of logging agent that is
                                      deployed by default for newly created node pools
                                      in the cluster. Valid values include DEFAULT
                                      and MAX_THROUGHPUT. See Increasing logging agent
                                      throughput for more information.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      nodeVersion:
                        description: The Kubernetes version on the nodes. Must either
                          be unset or set to the same value as min_master_version
                          on create. Defaults to the default version set by GKE which
                          is not necessarily the latest version. This only affects
                          nodes in the default node pool. To update nodes in other
                          node pools, use the version attribute on the node pool.
                        type: string
                      notificationConfig:
                        description: Configuration for the cluster upgrade notifications
                          feature. Structure is documented below.
                        items:
                          properties:
                            pubsub:
                              description: The pubsub config for the cluster's upgrade
                                notifications.
                              items:
                                properties:
                                  enabled:
                                    description: Whether or not the notification config
                                      is enabled
                                    type: boolean
                                  filter:
                                    description: Choose what type of notifications
                                      you want to receive. If no filters are applied,
                                      you'll receive all notification types. Structure
                                      is documented below.
                                    items:
                                      properties:
                                        eventType:
                                          description: Can be used to filter what
                                            notifications are sent. Accepted values
                                            are UPGRADE_AVAILABLE_EVENT, UPGRADE_EVENT
                                            and SECURITY_BULLETIN_EVENT. See Filtering
                                            notifications for more details.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  topic:
                                    description: 'The pubsub topic to push upgrade
                                      notifications to. Must be in the same project
                                      as the cluster. Must be in the format: projects/{project}/topics/{topic}.'
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      operation:
                        type: string
                      privateClusterConfig:
                        description: Configuration for private clusters, clusters
                          with private nodes. Structure is documented below.
                        items:
                          properties:
                            enablePrivateEndpoint:
                              description: When true, the cluster's private endpoint
                                is used as the cluster endpoint and access through
                                the public endpoint is disabled. When false, either
                                endpoint can be used. This field only applies to private
                                clusters, when enable_private_nodes is true.
                              type: boolean
                            enablePrivateNodes:
                              description: Enables the private cluster feature, creating
                                a private endpoint on the cluster. In a private cluster,
                                nodes only have RFC 1918 private addresses and communicate
                                with the master's private endpoint via private networking.
                              type: boolean
                            masterGlobalAccessConfig:
                              description: Controls cluster master global access settings.
                                Structure is documented below.
                              items:
                                properties:
                                  enabled:
                                    description: Whether the cluster master is accessible
                                      globally or not.
                                    type: boolean
                                type: object
                              type: array
                            masterIpv4CidrBlock:
                              description: The IP range in CIDR notation to use for
                                the hosted master network. This range will be used
                                for assigning private IP addresses to the cluster
                                master(s) and the ILB VIP. This range must not overlap
                                with any other ranges in use within the cluster's
                                network, and it must be a /28 subnet. See Private
                                Cluster Limitations for more details. This field only
                                applies to private clusters, when enable_private_nodes
                                is true.
                              type: string
                            peeringName:
                              description: The name of the peering between this cluster
                                and the Google owned VPC.
                              type: string
                            privateEndpoint:
                              description: The internal IP address of this cluster's
                                master endpoint.
                              type: string
                            privateEndpointSubnetwork:
                              description: Subnetwork in cluster's network where master's
                                endpoint will be provisioned.
                              type: string
                            publicEndpoint:
                              description: The external IP address of this cluster's
                                master endpoint.
                              type: string
                          type: object
                        type: array
                      privateIpv6GoogleAccess:
                        description: The desired state of IPv6 connectivity to Google
                          Services. By default, no private IPv6 access to or from
                          Google Services (all access will be via IPv4).
                        type: string
                      project:
                        description: The ID of the project in which the resource belongs.
                          If it is not provided, the provider project is used.
                        type: string
                      releaseChannel:
                        description: Configuration options for the Release channel
                          feature, which provide more control over automatic upgrades
                          of your GKE clusters. When updating this field, GKE imposes
                          specific version requirements. See Selecting a new release
                          channel for more details; the google_container_engine_versions
                          datasource can provide the default version for a channel.
                          Instead, use the "UNSPECIFIED" channel. Structure is documented
                          below.
                        items:
                          properties:
                            channel:
                              description: 'The selected release channel. Accepted
                                values are:'
                              type: string
                          type: object
                        type: array
                      removeDefaultNodePool:
                        description: If true, deletes the default node pool upon cluster
                          creation. If you're using google_container_node_pool resources
                          with no default node pool, this should be set to true, alongside
                          setting initial_node_count to at least 1.
                        type: boolean
                      resourceLabels:
                        additionalProperties:
                          type: string
                        description: The GCE resource labels (a map of key/value pairs)
                          to be applied to the cluster.
                        type: object
                      resourceUsageExportConfig:
                        description: Configuration for the ResourceUsageExportConfig
                          feature. Structure is documented below.
                        items:
                          properties:
                            bigqueryDestination:
                              description: Parameters for using BigQuery as the destination
                                of resource usage export.
                              items:
                                properties:
                                  datasetId:
                                    description: 'The ID of a BigQuery Dataset. For
                                      Example:'
                                    type: string
                                type: object
                              type: array
                            enableNetworkEgressMetering:
                              description: Whether to enable network egress metering
                                for this cluster. If enabled, a daemonset will be
                                created in the cluster to meter network egress traffic.
                              type: boolean
                            enableResourceConsumptionMetering:
                              description: Whether to enable resource consumption
                                metering on this cluster. When enabled, a table will
                                be created in the resource export BigQuery dataset
                                to store resource consumption data. The resulting
                                table can be joined with the resource usage table
                                or with BigQuery billing export. Defaults to true.
                              type: boolean
                          type: object
                        type: array
                      securityPostureConfig:
                        description: Enable/Disable Security Posture API features
                          for the cluster. Structure is documented below.
                        items:
                          properties:
                            mode:
                              description: Sets the mode of the Kubernetes security
                                posture API's off-cluster features. Available options
                                include DISABLED and BASIC.
                              type: string
                            vulnerabilityMode:
                              description: Sets the mode of the Kubernetes security
                                posture API's workload vulnerability scanning. Available
                                options include VULNERABILITY_DISABLED and VULNERABILITY_BASIC.
                              type: string
                          type: object
                        type: array
                      selfLink:
                        description: The server-defined URL for the resource.
                        type: string
                      serviceExternalIpsConfig:
                        description: Structure is documented below.
                        items:
                          properties:
                            enabled:
                              description: Controls whether external ips specified
                                by a service will be allowed. It is enabled by default.
                              type: boolean
                          type: object
                        type: array
                      servicesIpv4Cidr:
                        description: The IP address range of the Kubernetes services
                          in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service
                          addresses are typically put in the last /16 from the container
                          CIDR.
                        type: string
                      subnetwork:
                        description: The name or self_link of the Google Compute Engine
                          subnetwork in which the cluster's instances are launched.
                        type: string
                      tpuIpv4CidrBlock:
                        description: The IP address range of the Cloud TPUs in this
                          cluster, in CIDR notation (e.g. 1.2.3.4/29).
                        type: string
                      verticalPodAutoscaling:
                        description: Vertical Pod Autoscaling automatically adjusts
                          the resources of pods controlled by it. Structure is documented
                          below.
                        items:
                          properties:
                            enabled:
                              description: Enables vertical pod autoscaling
                              type: boolean
                          type: object
                        type: array
                      workloadIdentityConfig:
                        description: Workload Identity allows Kubernetes service accounts
                          to act as a user-managed Google IAM Service Account. Structure
                          is documented below.
                        items:
                          properties:
                            workloadPool:
                              description: The workload pool to attach all Kubernetes
                                service accounts to.
                              type: string
                          type: object
                        type: array
              aws:
                description: Contains the details for aws objects required to be
                  mapped to capa
                type: object
                properties:
                  cluster:
                    type: object
                    properties:
                      arn:
                        description: ARN of the cluster.
                        type: string
                      certificateAuthority:
                        description: Attribute block containing certificate-authority-data
                          for your cluster. Detailed below.
                        items:
                          properties:
                            data:
                              description: Base64 encoded certificate data required
                                to communicate with your cluster. Add this to the
                                certificate-authority-data section of the kubeconfig
                                file for your cluster.
                              type: string
                          type: object
                        type: array
                      clusterId:
                        description: The ID of your local Amazon EKS cluster on the
                          AWS Outpost. This attribute isn't available for an AWS EKS
                          cluster on AWS cloud.
                        type: string
                      createdAt:
                        description: Unix epoch timestamp in seconds for when the
                          cluster was created.
                        type: string
                      enabledClusterLogTypes:
                        description: List of the desired control plane logging to
                          enable. For more information, see Amazon EKS Control Plane
                          Logging.
                        items:
                          type: string
                        type: array
                      encryptionConfig:
                        description: Configuration block with encryption configuration
                          for the cluster. Only available on Kubernetes 1.13 and above
                          clusters created after March 6, 2020. Detailed below.
                        items:
                          properties:
                            provider:
                              description: Configuration block with provider for encryption.
                                Detailed below.
                              items:
                                properties:
                                  keyArn:
                                    description: ARN of the Key Management Service
                                      (KMS) customer master key (CMK). The CMK must
                                      be symmetric, created in the same region as
                                      the cluster, and if the CMK was created in a
                                      different account, the user must have access
                                      to the CMK. For more information, see Allowing
                                      Users in Other Accounts to Use a CMK in the
                                      AWS Key Management Service Developer Guide.
                                    type: string
                                type: object
                              type: array
                            resources:
                              description: 'List of strings with resources to be encrypted.
                                Valid values: secrets.'
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      endpoint:
                        description: Endpoint for your Kubernetes API server.
                        type: string
                      id:
                        description: Name of the cluster.
                        type: string
                      identity:
                        description: Attribute block containing identity provider
                          information for your cluster. Only available on Kubernetes
                          version 1.13 and 1.14 clusters created or upgraded on or
                          after September 3, 2019. Detailed below.
                        items:
                          properties:
                            oidc:
                              description: Nested block containing OpenID Connect
                                identity provider information for the cluster. Detailed
                                below.
                              items:
                                properties:
                                  issuer:
                                    description: Issuer URL for the OpenID Connect
                                      identity provider.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      kubernetesNetworkConfig:
                        description: Configuration block with kubernetes network configuration
                          for the cluster. Detailed below.
                        items:
                          properties:
                            ipFamily:
                              description: The IP family used to assign Kubernetes
                                pod and service addresses. Valid values are ipv4 (default)
                                and ipv6. You can only specify an IP family when you
                                create a cluster, changing this value will force a
                                new cluster to be created.
                              type: string
                            serviceIpv4Cidr:
                              description: 'The CIDR block to assign Kubernetes pod
                                and service IP addresses from. If you don''t specify
                                a block, Kubernetes assigns addresses from either
                                the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We
                                recommend that you specify a block that does not overlap
                                with resources in other networks that are peered or
                                connected to your VPC. You can only specify a custom
                                CIDR block when you create a cluster, changing this
                                value will force a new cluster to be created. The
                                block must meet the following requirements:'
                              type: string
                            serviceIpv6Cidr:
                              description: The CIDR block that Kubernetes pod and
                                service IP addresses are assigned from if you specified
                                ipv6 for ipFamily when you created the cluster. Kubernetes
                                assigns service addresses from the unique local address
                                range (fc00::/7) because you can't specify a custom
                                IPv6 CIDR block when you create the cluster.
                              type: string
                          type: object
                        type: array
                      outpostConfig:
                        description: Configuration block representing the configuration
                          of your local Amazon EKS cluster on an AWS Outpost. This
                          block isn't available for creating Amazon EKS clusters on
                          the AWS cloud.
                        items:
                          properties:
                            controlPlaneInstanceType:
                              description: 'The Amazon EC2 instance type that you
                                want to use for your local Amazon EKS cluster on Outposts.
                                The instance type that you specify is used for all
                                Kubernetes control plane instances. The instance type
                                can''t be changed after cluster creation. Choose an
                                instance type based on the number of nodes that your
                                cluster will have. If your cluster will have:'
                              type: string
                            controlPlanePlacement:
                              description: 'An object representing the placement configuration
                                for all the control plane instances of your local
                                Amazon EKS cluster on AWS Outpost. The following arguments
                                are supported in the control_plane_placement configuration
                                block:'
                              items:
                                properties:
                                  groupName:
                                    description: The name of the placement group for
                                      the Kubernetes control plane instances. This
                                      setting can't be changed after cluster creation.
                                    type: string
                                type: object
                              type: array
                            outpostArns:
                              description: The ARN of the Outpost that you want to
                                use for your local Amazon EKS cluster on Outposts.
                                This argument is a list of arns, but only a single
                                Outpost ARN is supported currently.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      platformVersion:
                        description: Platform version for the cluster.
                        type: string
                      roleArn:
                        description: ARN of the IAM role that provides permissions
                          for the Kubernetes control plane to make calls to AWS API
                          operations on your behalf. Ensure the resource configuration
                          includes explicit dependencies on the IAM Role permissions
                          by adding depends_on if using the aws_iam_role_policy resource
                          or aws_iam_role_policy_attachment resource, otherwise EKS
                          cannot delete EKS managed EC2 infrastructure such as Security
                          Groups on EKS Cluster deletion.
                        type: string
                      status:
                        description: Status of the EKS cluster. One of CREATING, ACTIVE,
                          DELETING, FAILED.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Key-value map of resource tags.
                        type: object
                      tagsAll:
                        additionalProperties:
                          type: string
                        description: Map of tags assigned to the resource, including
                          those inherited from the provider default_tags configuration
                          block.
                        type: object
                      version:
                        description: –  Desired Kubernetes master version. If you
                          do not specify a value, the latest available version at
                          resource creation is used and no upgrades will occur except
                          those automatically triggered by EKS. The value must be
                          configured and increased to upgrade the version when desired.
                          Downgrades are not supported by EKS.
                        type: string
                      vpcConfig:
                        description: Configuration block for the VPC associated with
                          your cluster. Amazon EKS VPC resources have specific requirements
                          to work properly with Kubernetes. For more information,
                          see Cluster VPC Considerations and Cluster Security Group
                          Considerations in the Amazon EKS User Guide. Detailed below.
                          Also contains attributes detailed in the Attributes section.
                        items:
                          properties:
                            clusterSecurityGroupId:
                              description: Cluster security group that was created
                                by Amazon EKS for the cluster. Managed node groups
                                use this security group for control-plane-to-data-plane
                                communication.
                              type: string
                            endpointPrivateAccess:
                              description: Whether the Amazon EKS private API server
                                endpoint is enabled. Default is false.
                              type: boolean
                            endpointPublicAccess:
                              description: Whether the Amazon EKS public API server
                                endpoint is enabled. Default is true.
                              type: boolean
                            publicAccessCidrs:
                              description: List of CIDR blocks. Indicates which CIDR
                                blocks can access the Amazon EKS public API server
                                endpoint when enabled. EKS defaults this to a list
                                with 0.0.0.0/0.
                              items:
                                type: string
                              type: array
                            securityGroupIds:
                              description: account elastic network interfaces that
                                Amazon EKS creates to use to allow communication between
                                your worker nodes and the Kubernetes control plane.
                              items:
                                type: string
                              type: array
                            subnetIds:
                              description: account elastic network interfaces in these
                                subnets to allow communication between your worker
                                nodes and the Kubernetes control plane.
                              items:
                                type: string
                              type: array
                            vpcId:
                              description: ID of the VPC associated with your cluster.
                              type: string
                          type: object
                        type: array
                  vpc:
                    type: object
                    properties:
                      arn:
                        description: Amazon Resource Name (ARN) of VPC
                        type: string
                      assignGeneratedIpv6CidrBlock:
                        description: Requests an Amazon-provided IPv6 CIDR block with
                          a /56 prefix length for the VPC. You cannot specify the
                          range of IP addresses, or the size of the CIDR block. Default
                          is false. Conflicts with ipv6_ipam_pool_id
                        type: boolean
                      cidrBlock:
                        description: The IPv4 CIDR block for the VPC. CIDR can be
                          explicitly set or it can be derived from IPAM using ipv4_netmask_length.
                        type: string
                      defaultNetworkAclId:
                        description: The ID of the network ACL created by default
                          on VPC creation
                        type: string
                      defaultRouteTableId:
                        description: The ID of the route table created by default
                          on VPC creation
                        type: string
                      defaultSecurityGroupId:
                        description: The ID of the security group created by default
                          on VPC creation
                        type: string
                      dhcpOptionsId:
                        description: The ID of the VPC
                        type: string
                      enableClassiclink:
                        description: A boolean flag to enable/disable ClassicLink
                          for the VPC. Only valid in regions and accounts that support
                          EC2 Classic. See the ClassicLink documentation for more
                          information. Defaults false.
                        type: boolean
                      enableClassiclinkDnsSupport:
                        description: A boolean flag to enable/disable ClassicLink
                          DNS Support for the VPC. Only valid in regions and accounts
                          that support EC2 Classic.
                        type: boolean
                      enableDnsHostnames:
                        description: A boolean flag to enable/disable DNS hostnames
                          in the VPC. Defaults false.
                        type: boolean
                      enableDnsSupport:
                        description: A boolean flag to enable/disable DNS support
                          in the VPC. Defaults to true.
                        type: boolean
                      enableNetworkAddressUsageMetrics:
                        description: Indicates whether Network Address Usage metrics
                          are enabled for your VPC. Defaults to false.
                        type: boolean
                      id:
                        description: The ID of the VPC
                        type: string
                      instanceTenancy:
                        description: A tenancy option for instances launched into
                          the VPC. Default is default, which ensures that EC2 instances
                          launched in this VPC use the EC2 instance tenancy attribute
                          specified when the EC2 instance is launched. The only other
                          option is dedicated, which ensures that EC2 instances launched
                          in this VPC are run on dedicated tenancy instances regardless
                          of the tenancy attribute specified at launch. This has a
                          dedicated per region fee of $2 per hour, plus an hourly
                          per instance usage fee.
                        type: string
                      ipv4IpamPoolId:
                        description: The ID of an IPv4 IPAM pool you want to use for
                          allocating this VPC's CIDR. IPAM is a VPC feature that you
                          can use to automate your IP address management workflows
                          including assigning, tracking, troubleshooting, and auditing
                          IP addresses across AWS Regions and accounts. Using IPAM
                          you can monitor IP address usage throughout your AWS Organization.
                        type: string
                      ipv4NetmaskLength:
                        description: The netmask length of the IPv4 CIDR you want
                          to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.
                        type: number
                      ipv6AssociationId:
                        description: The association ID for the IPv6 CIDR block.
                        type: string
                      ipv6CidrBlock:
                        description: IPv6 CIDR block to request from an IPAM Pool.
                          Can be set explicitly or derived from IPAM using ipv6_netmask_length.
                        type: string
                      ipv6CidrBlockNetworkBorderGroup:
                        description: By default when an IPv6 CIDR is assigned to a
                          VPC a default ipv6_cidr_block_network_border_group will
                          be set to the region of the VPC. This can be changed to
                          restrict advertisement of public addresses to specific Network
                          Border Groups such as LocalZones.
                        type: string
                      ipv6IpamPoolId:
                        description: IPAM Pool ID for a IPv6 pool. Conflicts with
                          assign_generated_ipv6_cidr_block.
                        type: string
                      ipv6NetmaskLength:
                        description: 'Netmask length to request from IPAM Pool. Conflicts
                          with ipv6_cidr_block. This can be omitted if IPAM pool as
                          a allocation_default_netmask_length set. Valid values: 56.'
                        type: number
                      mainRouteTableId:
                        description: The ID of the main route table associated with
                          this VPC. Note that you can change a VPC's main route table
                          by using an aws_main_route_table_association.
                        type: string
                      ownerId:
                        description: The ID of the AWS account that owns the VPC.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Key-value map of resource tags.
                        type: object
                      tagsAll:
                        additionalProperties:
                          type: string
                        description: A map of tags assigned to the resource, including
                          those inherited from the provider default_tags configuration
                          block.
                        type: object
              subnets:
                type: array
                x-kubernetes-list-type: map
                x-kubernetes-list-map-keys:
                - id
                items:
                  type: object
                  x-kubernetes-map-type: granular
                  additionalProperties: true
                  properties:
                    id:
                      description: The ID for this subnet
                      type: string
                    availabilityZone:
                      description: The availability zone this subnet is located in
                      type: string
                    cidrBlock:
                      description: The IPv4 CIDR block assigned to this subnet
                      type: string
                    ipv6CidrBlock:
                      description: The IPv6 CIDR block assigned to this subnet
                      type: string
                    isIpV6:
                      description: Is IPv6 enabled on this subnet
                      type: boolean
                    isPublic:
                      description: Is this subnet public facing
                      type: boolean
                    tags:
                      type: object
                      x-kubernetes-map-type: granular
                      additionalProperties:
                        type: string
                  required:
                  - id